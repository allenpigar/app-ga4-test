{"version":3,"sources":["components/ui/ShellData/shelldata.js","components/ui/GraphContainer/index.js","components/ui/GraphContainer/GraphContainer.js","components/ui/SnackBar/SnackBar.js","context/SnackBarContext.js","utility/parseData.js","components/Overview/graph/PageviewTraffic.js","components/Overview/graph/InboundTraffic.js","components/Overview/graph/SocialTraffic.js","components/Overview/graph/TopPerforming.js","context/GoogleContext.js","context/DateRangeContext.js","components/Overview/index.js","components/PageContent/PageContentTable.js","components/PageContent/MetricSelection.js","components/PageContent/PageContentGraph.js","utility/request.js","services/useAnalyticsApi.js","components/PageContent/PageContentTableSummary.js","components/PageContent/index.js","components/Journey/Slicer.js","components/Journey/EntranceSelector.js","components/Journey/JourneyGraph.js","components/Journey/index.js","services/useFetchWrapper.js","components/ui/DatePicker/DatePicker.js","components/ui/DomainPicker/DomainTable.js","components/ui/DomainPicker/DomainPicker.js","components/ui/SearchBar/SearchBarFilterMenu.js","components/ui/SearchBar/SearchBar.js","components/ui/NavBar/NavBar.js","components/ui/AuthOverlay/GaAuthenticate.js","components/ui/AuthOverlay/GoogleAuthOverlay.js","components/ui/AppWrapper/ContentWrapper.js","components/PageContent/card/MetricItem.js","components/PageContent/card/index.js","components/PageContent/graph/MetricGraph.js","components/PageContent/graph/index.js","components/PageContent/table/MetricTable.js","components/PageContent/table/index.js","components/Overview/graph/index.js","components/ui/AppWrapper/AppWrapper.js","App.js","reportWebVitals.js","theme/index.js","context/index.js","index.js"],"names":["shellBarData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","shellDoughnutData","GraphContainer","title","loading","subTitle","rightMenu","children","Card","sx","padding","Box","display","justifyContent","gap","flexGrow","Typography","variant","fontWeight","fontSize","color","paddingTop","position","top","left","right","bottom","alignItems","CircularProgress","Alert","React","forwardRef","props","ref","elevation","CustomSnackbar","useState","open","setOpen","alertType","setAlertType","message","setMessage","useImperativeHandle","show","error","handleClose","Snackbar","autoHideDuration","onClose","severity","width","SnackBarContext","createContext","useNotify","useContext","SnackBarProvider","snackBarRef","useRef","Provider","value","colors","colorsArray","cleanLabel","string","charAt","toUpperCase","slice","toChartJS","type","chartJSData","reports","metricHeaders","forEach","i","newDataset","name","push","rows","labelParts","dimensionValues","dimension","join","metricValues","metric","index","toTableData","tableData","headers","dimensionHeaders","header","row","tempValue","toGoogleUaData","columnHeader","dimensions","map","val","metricHeader","metricHeaderEntries","metrics","values","totals","parseData","googleData","PageviewTraffic","instanceZUID","googleDetails","dateRange","token","notify","chartData","setChartData","setLoading","useEffect","a","getBarChartData","current","fetch","process","method","credentials","Authorization","body","JSON","stringify","property","requests","dateRanges","startDate","endDate","orderBys","orderType","dimensionName","keepEmptyRows","then","res","json","selectedItem","height","options","maintainAspectRatio","bezierCurve","scales","yAxes","xAxes","legend","InboundTraffic","getInboundTraffic","dimensionFilter","notExpression","filter","fieldName","stringFilter","matchType","SocialTraffic","getSocialTraffic","console","log","limit","metricName","desc","TopPerforming","setHeaders","setData","getTopTenContent","truncatedData","col","Number","Math","round","length","Table","TableHead","TableRow","item","TableCell","replace","trim","TableBody","field","GoogleContext","useGoogle","GoogleProvider","setGoogleDetails","isAuthenticated","setIsAuthenticated","DateRangeContext","DateRangeUpdateContext","useDateRange","DateRangeProvider","moment","subtract","format","setDateRange","date","Overview","instance","Grid","container","spacing","xs","md","lg","ZUID","shelldata","flexDirection","marginBottom","PageContentTable","selectedPagePath","onCheckChange","isLoading","isItemSelected","includes","labelId","Checkbox","checked","onChange","event","inputProps","MetricSelection","selectedMetrics","onSelect","anchorEl","setAnchorEl","Boolean","id","undefined","Link","onClick","currentTarget","cursor","Popover","anchorOrigin","vertical","horizontal","p","FormGroup","FormControlLabel","control","PageContentGraph","selectedPath","selectedMetricsY1","setSelectedMetricsY1","selectedMetricsY2","setSelectedMetricsY2","onSelectY1","target","onSelectY2","MetricSelectionComponent","formatTicksY2","ticks","startOf","seconds","formatTicksY1","yAxisID","shift","dataset","responsive","tooltips","callbacks","dataSetIndex","datasetIndex","callback","request","url","option","response","result","ok","Error","useAnalyticsApi","zuid","dataApiUrl","domainApiUrl","getChartData","googleId","filters","query","inListFilter","caseSensitive","getContentPages","metricAggregations","getContentSinglePage","getGaDomain","getPageJourney","pageReferrer","PageContentTableSummary","summaryData","setSummaryData","formatChartData","returnData","formatData","selectedValue","objArray","metricData","avg","num1","num2","distance","displacement","time","GridItem","marginTop","Divider","orientation","flexItem","GridItemTime","GridItemRate","direction","PageContent","useSearchParams","searchParams","setSelectedPagePath","setGoogleData","setTableData","get","site","Slicer","Slider","defaultValue","step","marks","min","max","valueLabelDisplay","valueLabelFormat","EntranceSelector","Autocomplete","disablePortal","newValue","renderInput","params","TextField","size","JourneyGraph","graphData","setGraphData","summary","setSummary","formatJourney","raw","levels","filterData","removeArray","bufferData","levelData","sort","compare","sankeyData","key","hasOwnProperty","ifSankeyExist","maxEntrance","reduce","prev","maxPage","entrance","page","aveVisit","ave","b","toFixed","base","items","remove","newArray","sankey","node","nodePadding","link","colorMode","textAlign","chartType","Journey","setIsLoading","setSlice","setUrl","entranceUrl","setEntranceUrl","rawData","setRawData","responseJourney","entrances","getEntranceUrl","handleUrlChange","optimizeSliceChange","useCallback","func","timer","args","context","this","clearTimeout","setTimeout","apply","debounce","RightComponent","useFetchWrapper","ZestyAPI","window","Zesty","FetchWrapper","authAPIURL","instancesAPIURL","accountsAPIURL","mediaAPIURL","sitesServiceURL","getGoogleSetting","getSettings","settings","find","setting","getGooglePropertyID","getUserData","verify","updateSetting","settingZuid","searchItems","createGa4Setting","category","keyFriendly","dataType","CustomDatePicker","dateRangeUpdate","onDateChange","Button","startIcon","minWidth","FormControl","fullWidth","InputLabel","Select","endOf","MenuItem","InputLabelProps","shrink","required","onBlur","DomainTable","domains","onCellClick","selectedDomain","setPage","rowsPerPage","setRowsPerPage","TableContainer","component","domain","displayName","dataStreams","webStreamData","defaultUri","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","SelectProps","native","onPageChange","newPage","onRowsPerPageChange","parseInt","DomainPicker","domainList","domainSelect","buttonName","showModal","setShowModal","Modal","transform","paddingBottom","paddingRight","IconButton","SearchBarFilterMenu","isTyping","onMenuClick","Paper","maxHeight","overflowY","List","path","ListItemButton","ListItemText","primary","metaTitle","secondary","SearchBar","navigate","useNavigate","setIsTyping","anchor","selectedData","setSelectedData","handleChange","searchItem","filteredResult","formatResult","web","optimizeSearch","ClickAwayListener","onClickAway","placeholder","onFocus","autoComplete","Popper","placement","NavBar","setDomainList","googleProfile","setGoogleProfile","showSelection","setShowSelection","properties","gData","selectedProfile","onDomainSelect","square","GaAuthenticates","GoogleAuthOverlay","user","titles","noDomain","notAuthenticated","legacyAuthentication","descriptions","generalDescription","state","Backdrop","zIndex","justifyItems","borderRadius","alt","style","src","icon","faPlug","marginLeft","GaAuthenticate","evt","address","encodeURI","ID","offsetLeft","offsetTop","Menu","maxWidth","MenuList","to","ContentWrapper","userId","MetricItem","Item","AvgSessionDuration","sessionDur","BounceRate","bounceRate","PageValue","pageValue","PageViews","pageViews","EventPerSession","eventPerSession","Conversions","conversion","MetricCard","useParams","setMetricData","getData","contentData","MetricGraph","Graph","MetricTable","convertData","OverviewGraph","getProperty","googleSetting","AppWrapper","setUserId","PageNotFound","basename","exact","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","ContextWrapper","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.923da46b.chunk.js","sourcesContent":["export default {\r\n  shellBarData: function () {\r\n    return {\r\n      labels: [\r\n        \"Loading\",\r\n        \"Loading\",\r\n        \"Loading\",\r\n        \"Loading\",\r\n        \"Loading\",\r\n        \"Loading\",\r\n        \"Loading\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Loading\",\r\n          backgroundColor: \"rgba(0,0,0,0.2)\",\r\n          borderColor: \"rgba(0,0,0,0,1)\",\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: \"rgba(0,0,0,0,0.4)\",\r\n          hoverBorderColor: \"rgba(0,0,0,0,1)\",\r\n          data: [0, 0, 0, 0, 0, 0, 0],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  shellDoughnutData: function () {\r\n    return {\r\n      labels: [\"Loading\", \"Loading\", \"Loading\"],\r\n      datasets: [\r\n        {\r\n          data: [20, 20, 20],\r\n          backgroundColor: [\r\n            \"rgba(0,0,0,0,0.4)\",\r\n            \"rgba(0,0,0,0,0.4)\",\r\n            \"rgba(0,0,0,0,0.4)\",\r\n          ],\r\n          hoverBackgroundColor: [\r\n            \"rgba(0,0,0,0,0.7)\",\r\n            \"rgba(0,0,0,0,0.7)\",\r\n            \"rgba(0,0,0,0,0.7)\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n","import { GraphContainer } from \"./GraphContainer\"\r\n\r\nexport default GraphContainer","import { CardContent, Card,Typography, Box, CircularProgress } from \"@mui/material\"\r\n\r\nexport const GraphContainer = ({title, loading = false, subTitle, rightMenu,children}) => {\r\n\r\n    return (\r\n            <Card \r\n                sx={{\r\n                    padding: '20px'\r\n                }}>\r\n                <Box \r\n                    display=\"flex\" \r\n                    justifyContent=\"center\"\r\n                    gap={4}>\r\n                    <Box \r\n                        flexGrow={1}>\r\n                        <Typography \r\n                            variant=\"h2\"\r\n                            sx={{\r\n                                fontWeight : '600',\r\n                                fontSize : '14pt',\r\n                                color : '#5b667d',\r\n                            }}>{title}</Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        {rightMenu}\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography  \r\n                            variant=\"h2\"\r\n                            sx={{\r\n                                fontWeight: '200',\r\n                                fontSize : '14pt'\r\n                            }} \r\n                            >{subTitle}</Typography>\r\n                    </Box>\r\n                </Box>\r\n                <Box\r\n                sx={{\r\n                    paddingTop: '18px',\r\n                    position: \"relative\"}}>\r\n                    {loading && (\r\n                        <Box sx={{\r\n                            top: 0,\r\n                            left : 0,\r\n                            right: 0,\r\n                            bottom : 0,\r\n                            position : \"absolute\",\r\n                            backgroundColor: \"rgba(255,255,255, 0.7)\",\r\n                            display : \"flex\",\r\n                            alignItems : \"center\",\r\n                            justifyContent : \"center\"\r\n                        }}>\r\n                            <CircularProgress />\r\n                        </Box>\r\n                    )}\r\n                    \r\n                    {children}\r\n                </Box>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState, forwardRef, useImperativeHandle } from 'react'\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst CustomSnackbar = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [alertType, setAlertType] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        show(message){\r\n            setOpen(true)\r\n            setAlertType(\"success\")\r\n            setMessage(message)\r\n        },\r\n        error(message){\r\n            setOpen(true)\r\n            setAlertType(\"error\")\r\n            setMessage(message)\r\n        }\r\n    }))\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} {...props} >\r\n                <Alert onClose={handleClose} severity={alertType} sx={{ width: '100%' }}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n})\r\n\r\nexport default CustomSnackbar","import React, {useContext, useState, useRef } from \"react\";\r\nimport CustomSnackbar from \"../components/ui/SnackBar/SnackBar\";\r\n\r\nconst SnackBarContext = React.createContext()\r\n\r\nexport function useNotify(){\r\n    return useContext(SnackBarContext)\r\n}\r\n\r\nexport function SnackBarProvider({children}){\r\n\r\n    const snackBarRef = useRef(null)\r\n\r\n    return (\r\n        <>\r\n            <SnackBarContext.Provider value={snackBarRef}>\r\n                <CustomSnackbar ref={snackBarRef} />\r\n                {children}\r\n            </SnackBarContext.Provider>\r\n        </>\r\n    )\r\n\r\n}","const colors = [\r\n  \"rgba(122,86,255,0.9)\",\r\n  \"rgba(54,162,235,0.9)\",\r\n  \"rgba(255,206,86,0.9)\",\r\n  \"rgba(65,234,212,0.9)\",\r\n  \"rgba(255,0,34,0.9)\",\r\n  \"rgba(86,255,122,0.9)\",\r\n  \"rgba(255,86,219,0.9)\",\r\n  \"rgba(255,122,86,0.9)\",\r\n  \"rgba(86,219,255,0.9)\",\r\n];\r\n\r\nconst colorsArray = [...colors, ...colors, ...colors];\r\n\r\nconst cleanLabel = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nconst toChartJS = (data, type = \"bar\") => {\r\n  let chartJSData = {\r\n    labels: [],\r\n    datasets: [],\r\n  };\r\n\r\n  data.reports[0].metricHeaders.forEach((value, i) => {\r\n    let newDataset = {\r\n      label: cleanLabel(value.name),\r\n      data: [],\r\n      backgroundColor: colorsArray[i],\r\n    };\r\n\r\n    if (type === \"pie\") {\r\n      newDataset.backgroundColor = [];\r\n    }\r\n\r\n    chartJSData.datasets.push(newDataset);\r\n  });\r\n\r\n  data.reports[0].rows.forEach((value, i) => {\r\n    let labelParts = [];\r\n    value.dimensionValues.forEach((dimension) => {\r\n      labelParts.push(dimension.value);\r\n    });\r\n\r\n    chartJSData.labels.push(labelParts.join(\" \"));\r\n\r\n    value.metricValues.forEach((metric, index) => {\r\n      chartJSData.datasets[index].data.push(metric.value);\r\n      if (type === \"pie\") {\r\n        chartJSData.datasets[index].backgroundColor.push(colorsArray[i]);\r\n      }\r\n    });\r\n  });\r\n\r\n  return chartJSData;\r\n};\r\n\r\nconst toTableData = (data) => {\r\n  let tableData = {\r\n    headers: [],\r\n    data: [],\r\n  };\r\n\r\n  data.reports[0].dimensionHeaders.forEach((header, i) => {\r\n    tableData.headers.push(cleanLabel(header.name));\r\n  });\r\n\r\n  data.reports[0].metricHeaders.forEach((header, i) => {\r\n    tableData.headers.push(cleanLabel(header.name));\r\n  });\r\n  data.reports[0].rows.forEach((row) => {\r\n    let tempValue = [];\r\n\r\n    row.dimensionValues.forEach((dimension) => {\r\n      tempValue.push(dimension.value);\r\n    });\r\n\r\n    row.metricValues.forEach((metric) => {\r\n      tempValue.push(metric.value);\r\n    });\r\n\r\n    tableData.data.push(tempValue);\r\n  });\r\n\r\n  return tableData;\r\n};\r\n\r\nconst toGoogleUaData = (data) => {\r\n  return {\r\n    reports: [\r\n      {\r\n        columnHeader: {\r\n          dimensions: data.reports[0].dimensionHeaders.map((val) =>\r\n            cleanLabel(val.name)\r\n          ),\r\n          metricHeader: {\r\n            metricHeaderEntries: data.reports[0].metricHeaders.map((val) => {\r\n              return {\r\n                name: cleanLabel(val.name),\r\n                type: \"\",\r\n              };\r\n            }),\r\n          },\r\n        },\r\n        data: {\r\n          rows: data.reports[0].rows.map((row) => {\r\n            return {\r\n              dimensions: row.dimensionValues.map((val) => val.value),\r\n              metrics: [\r\n                {\r\n                  values: row.metricValues.map((val) => val.value),\r\n                },\r\n              ],\r\n            };\r\n          }),\r\n          totals: [\r\n            {\r\n              values: data.reports[0].totals[0]?.metricValues?.map(\r\n                (metric) => metric.value\r\n              ),\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const parseData = (data, type = \"bar\") => {\r\n  return {\r\n    chartJSData: toChartJS(data, type),\r\n    tableData: toTableData(data),\r\n    googleData: toGoogleUaData(data),\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport GraphContainer from \"../../ui/GraphContainer\";\r\nimport { useNotify } from \"../../../context/SnackBarContext\";\r\nimport { parseData } from \"../../../utility/parseData\";\r\n\r\nexport const PageviewTraffic = ({\r\n  instanceZUID,\r\n  googleDetails,\r\n  dateRange,\r\n  data,\r\n  token,\r\n}) => {\r\n  const notify = useNotify();\r\n  const [chartData, setChartData] = useState(data);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (googleDetails) {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getBarChartData();\r\n        setChartData(data.chartJSData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        return notify.current.error(\"Unable to fetch Page View Traffic data.\");\r\n      }\r\n    }\r\n  }, [googleDetails, dateRange]);\r\n\r\n  const getBarChartData = async () => {\r\n    const res = await fetch(\r\n      `${process.env.REACT_APP_SERVICE_GOOGLE_ANALYTICS_GA4_READ}/?zuid=${instanceZUID}`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"omit\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          property: googleDetails.name,\r\n          requests: [\r\n            {\r\n              dimensions: [\r\n                {\r\n                  name: \"date\",\r\n                },\r\n              ],\r\n              metrics: [\r\n                {\r\n                  name: \"screenPageViews\",\r\n                },\r\n                {\r\n                  name: \"sessions\",\r\n                },\r\n              ],\r\n              dateRanges: [\r\n                {\r\n                  startDate: dateRange.startDate,\r\n                  endDate: dateRange.endDate,\r\n                },\r\n              ],\r\n              orderBys: [\r\n                {\r\n                  dimension: {\r\n                    orderType: \"ALPHANUMERIC\",\r\n                    dimensionName: \"date\",\r\n                  },\r\n                },\r\n              ],\r\n              keepEmptyRows: true,\r\n            },\r\n          ],\r\n        }),\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    return parseData(res, \"bar\");\r\n  };\r\n\r\n  return (\r\n    <GraphContainer\r\n      title=\"Pageview Traffic\"\r\n      subTitle={\r\n        dateRange.selectedItem === \"Custom\"\r\n          ? dateRange.startDate + \" to \" + dateRange.endDate\r\n          : dateRange.selectedItem\r\n      }\r\n      loading={loading}\r\n    >\r\n      <Line\r\n        data={chartData}\r\n        // width={500}\r\n        height={553}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          bezierCurve: false,\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n              },\r\n            ],\r\n            xAxes: [\r\n              {\r\n                display: false,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            legend: {\r\n              display: true,\r\n              position: \"bottom\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </GraphContainer>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport GraphContainer from \"../../ui/GraphContainer\";\r\nimport { useNotify } from \"../../../context/SnackBarContext\";\r\nimport { parseData } from \"../../../utility/parseData\";\r\n\r\nexport const InboundTraffic = ({\r\n  data,\r\n  instanceZUID,\r\n  googleDetails,\r\n  dateRange,\r\n  token,\r\n}) => {\r\n  const notify = useNotify();\r\n  const [chartData, setChartData] = useState(data);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (googleDetails) {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getInboundTraffic();\r\n        setChartData(data.chartJSData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        return notify.current.error(\"Unable to fetch Inbound traffic data.\");\r\n      }\r\n    }\r\n  }, [googleDetails, dateRange]);\r\n\r\n  const getInboundTraffic = async () => {\r\n    const res = await fetch(\r\n      `${process.env.REACT_APP_SERVICE_GOOGLE_ANALYTICS_GA4_READ}/?zuid=${instanceZUID}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          property: googleDetails.name,\r\n          requests: [\r\n            {\r\n              dimensions: [{ name: \"firstUserDefaultChannelGroup\" }],\r\n              metrics: [{ name: \"sessions\" }],\r\n              dateRanges: [\r\n                { startDate: dateRange.startDate, endDate: dateRange.endDate },\r\n              ],\r\n              dimensionFilter: {\r\n                notExpression: {\r\n                  filter: {\r\n                    fieldName: \"firstUserDefaultChannelGroup\",\r\n                    stringFilter: { matchType: \"EXACT\", value: \"(not set)\" },\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        }),\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    return parseData(res, \"pie\");\r\n  };\r\n\r\n  return (\r\n    <GraphContainer\r\n      title=\"Inbound Traffic\"\r\n      subTitle={\r\n        dateRange.selectedItem === \"Custom\"\r\n          ? dateRange.startDate + \" to \" + dateRange.endDate\r\n          : dateRange.selectedItem\r\n      }\r\n      loading={loading}\r\n    >\r\n      <Doughnut\r\n        data={chartData}\r\n        // width={250}\r\n        height={220}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          legend: {\r\n            display: true,\r\n            position: \"left\",\r\n          },\r\n        }}\r\n      />\r\n    </GraphContainer>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport GraphContainer from \"../../ui/GraphContainer\";\r\nimport { useNotify } from \"../../../context/SnackBarContext\";\r\nimport { parseData } from \"../../../utility/parseData\";\r\n\r\nexport const SocialTraffic = ({\r\n  instanceZUID,\r\n  googleDetails,\r\n  dateRange,\r\n  data,\r\n  token,\r\n}) => {\r\n  const notify = useNotify();\r\n  const [chartData, setChartData] = useState(data);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (googleDetails) {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getSocialTraffic();\r\n        setChartData(data.chartJSData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n        return notify.current.error(\"Unable to fetch social traffic data.\");\r\n      }\r\n    }\r\n  }, [googleDetails, dateRange]);\r\n\r\n  const getSocialTraffic = async () => {\r\n    const res = await fetch(\r\n      `${process.env.REACT_APP_SERVICE_GOOGLE_ANALYTICS_GA4_READ}/?zuid=${instanceZUID}`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"omit\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          property: googleDetails.name,\r\n          requests: [\r\n            {\r\n              dimensions: [\r\n                {\r\n                  name: \"firstUserSource\",\r\n                },\r\n              ],\r\n              metrics: [\r\n                {\r\n                  name: \"sessions\",\r\n                },\r\n              ],\r\n              dateRanges: [\r\n                {\r\n                  startDate: dateRange.startDate,\r\n                  endDate: dateRange.endDate,\r\n                },\r\n              ],\r\n              limit: 10,\r\n              orderBys: [\r\n                {\r\n                  metric: {\r\n                    metricName: \"sessions\",\r\n                  },\r\n                  desc: true,\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        }),\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    return parseData(res, \"pie\");\r\n  };\r\n\r\n  return (\r\n    <GraphContainer\r\n      title=\"Social Traffic\"\r\n      subTitle={\r\n        dateRange.selectedItem === \"Custom\"\r\n          ? dateRange.startDate + \" to \" + dateRange.endDate\r\n          : dateRange.selectedItem\r\n      }\r\n      loading={loading}\r\n    >\r\n      <Doughnut\r\n        data={chartData}\r\n        // width={250}\r\n        height={220}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          legend: {\r\n            display: true,\r\n            position: \"left\",\r\n          },\r\n        }}\r\n      />\r\n    </GraphContainer>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport GraphContainer from \"../../ui/GraphContainer\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useNotify } from \"../../../context/SnackBarContext\";\r\nimport { parseData } from \"../../../utility/parseData\";\r\n\r\nexport function TopPerforming({\r\n  googleDetails,\r\n  dateRange,\r\n  instanceZUID,\r\n  token,\r\n}) {\r\n  const notify = useNotify();\r\n  const [headers, setHeaders] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (googleDetails) {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getTopTenContent();\r\n\r\n        const truncatedData = data.tableData.data.map((row) => {\r\n          return row.map((col) => {\r\n            // will not attempt conversion on a path\r\n            if (Number(col)) {\r\n              return Number(Math.round(col + \"e\" + 2) + \"e-\" + 2);\r\n            } else {\r\n              return col;\r\n            }\r\n          });\r\n        });\r\n\r\n        setHeaders(data.tableData.headers);\r\n        setData(truncatedData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        return notify.current.error(\"Unable to get top contents data.\");\r\n      }\r\n    }\r\n  }, [googleDetails, dateRange]);\r\n\r\n  const getTopTenContent = async () => {\r\n    const res = await fetch(\r\n      `${process.env.REACT_APP_SERVICE_GOOGLE_ANALYTICS_GA4_READ}/?zuid=${instanceZUID}`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"omit\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          property: googleDetails.name,\r\n          requests: [\r\n            {\r\n              dimensions: [{ name: \"pagePath\" }],\r\n              metrics: [\r\n                { name: \"averageSessionDuration\" },\r\n                { name: \"bounceRate\" },\r\n                { name: \"sessions\" },\r\n              ],\r\n              dateRanges: [\r\n                { startDate: dateRange.startDate, endDate: dateRange.endDate },\r\n              ],\r\n              limit: \"10\",\r\n              orderBys: [{ metric: { metricName: \"sessions\" }, desc: true }],\r\n            },\r\n          ],\r\n        }),\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    return parseData(res, \"bar\");\r\n  };\r\n\r\n  return (\r\n    <GraphContainer\r\n      title=\"Top Performing Content\"\r\n      loading={loading}\r\n      subTitle={\r\n        dateRange.selectedItem === \"Custom\"\r\n          ? dateRange.startDate + \" to \" + dateRange.endDate\r\n          : dateRange.selectedItem\r\n      }\r\n    >\r\n      {headers.length && data.length ? (\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {headers.map((item) => (\r\n                <TableCell\r\n                  sx={{\r\n                    fontWeight: 600,\r\n                  }}\r\n                >\r\n                  {item.replace(/([A-Z])/g, \" $1\").trim()}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((data, i) => (\r\n              <TableRow>\r\n                {data.map((field) => (\r\n                  <TableCell>{field}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      ) : (\r\n        \"No content performance data to display\"\r\n      )}\r\n    </GraphContainer>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\nconst GoogleContext = React.createContext()\r\n\r\nexport function useGoogle(){\r\n    return useContext(GoogleContext)\r\n}\r\n\r\nexport function GoogleProvider({children}){\r\n    \r\n    const [googleDetails, setGoogleDetails] = useState(null)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(true)\r\n\r\n\r\n    return (\r\n        <GoogleContext.Provider value={{ googleDetails, setGoogleDetails, isAuthenticated, setIsAuthenticated }}>\r\n            {children}\r\n        </GoogleContext.Provider>\r\n    )\r\n\r\n}","\r\nimport React, { useState, useContext } from 'react'\r\nimport moment from 'moment'\r\n\r\nconst DateRangeContext = React.createContext()\r\nconst DateRangeUpdateContext = React.createContext()\r\n\r\nexport function useDateRange(){\r\n    return useContext(DateRangeContext)\r\n}\r\n\r\nexport function useDateRangeUpdate(){\r\n    return useContext(DateRangeUpdateContext)\r\n}\r\n\r\nexport function DateRangeProvider({ children }){\r\n\r\n    const [dateRange, setDateRange] = useState({\r\n        selectedItem : \"Last 7 Days\",\r\n        startDate : moment().subtract(7, \"days\").format(\"YYYY-MM-DD\"),\r\n        endDate : moment().format(\"YYYY-MM-DD\"),\r\n    })\r\n\r\n    const updateDateRange = (date) => setDateRange(date)\r\n\r\n    return (\r\n        <>\r\n            <DateRangeContext.Provider value={dateRange}>\r\n                <DateRangeUpdateContext.Provider value={updateDateRange}>\r\n                    { children }\r\n                </DateRangeUpdateContext.Provider>\r\n            </DateRangeContext.Provider>\r\n        </>\r\n    )\r\n\r\n}","import shelldata from \"../ui/ShellData/shelldata\";\r\nimport { PageviewTraffic } from \"./graph/PageviewTraffic\";\r\nimport { InboundTraffic } from \"./graph/InboundTraffic\";\r\nimport { SocialTraffic } from \"./graph/SocialTraffic\";\r\nimport { TopPerforming } from \"./graph/TopPerforming\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useGoogle } from \"../../context/GoogleContext\";\r\nimport { useDateRange } from \"../../context/DateRangeContext\";\r\n\r\nexport default function Overview({ instance, token }) {\r\n  const { googleDetails, setGoogleDetails } = useGoogle();\r\n  const dateRange = useDateRange();\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={7} lg={7}>\r\n          <PageviewTraffic\r\n            instanceZUID={instance.ZUID}\r\n            googleDetails={googleDetails}\r\n            data={shelldata.shellBarData}\r\n            dateRange={dateRange}\r\n            token={token}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={5} lg={5}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                marginBottom: 4,\r\n              }}\r\n            >\r\n              <InboundTraffic\r\n                instanceZUID={instance.ZUID}\r\n                googleDetails={googleDetails}\r\n                data={shelldata.shellDoughnutData}\r\n                dateRange={dateRange}\r\n                token={token}\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <SocialTraffic\r\n                instanceZUID={instance.ZUID}\r\n                googleDetails={googleDetails}\r\n                dateRange={dateRange}\r\n                data={shelldata.shellDoughnutData}\r\n                token={token}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TopPerforming\r\n            instanceZUID={instance.ZUID}\r\n            googleDetails={googleDetails}\r\n            dateRange={dateRange}\r\n            token={token}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n// );\r\n","import { useState, useEffect } from \"react\";\r\nimport GraphContainer from \"../ui/GraphContainer\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useNotify } from \"../../context/SnackBarContext\";\r\n\r\nexport function PageContentTable({\r\n  selectedPagePath,\r\n  onCheckChange,\r\n  tableData,\r\n  isLoading = true,\r\n}) {\r\n  const notify = useNotify();\r\n  const [headers, setHeaders] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (tableData.length !== 0) {\r\n      try {\r\n        const truncatedData = tableData.tableData.data.map((row) => {\r\n          return row.map((col) => {\r\n            // will not attempt conversion on a path\r\n            if (Number(col)) {\r\n              return Number(Math.round(col + \"e\" + 2) + \"e-\" + 2);\r\n            } else {\r\n              return col;\r\n            }\r\n          });\r\n        });\r\n\r\n        setHeaders(tableData.tableData.headers);\r\n        setData(truncatedData);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        notify.current.error(error.message);\r\n      }\r\n    }\r\n  }, [tableData, selectedPagePath]);\r\n\r\n  return (\r\n    <>\r\n      <GraphContainer title=\"Pages\" loading={isLoading}>\r\n        {headers.length && data.length ? (\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                {headers.map((item) => (\r\n                  <TableCell>\r\n                    {item.replace(/([A-Z])/g, \" $1\").trim()}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((data, i) => {\r\n                const isItemSelected = selectedPagePath.includes(data[0]);\r\n                const labelId = `enhanced-table-checkbox-${i}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    sx={{\r\n                      backgroundColor:\r\n                        selectedPagePath.length !== 0\r\n                          ? selectedPagePath.includes(data[0])\r\n                            ? \"#ffffff\"\r\n                            : \"#f2f4fb\"\r\n                          : \"#ffffff\",\r\n                    }}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        color=\"secondary\"\r\n                        checked={isItemSelected}\r\n                        onChange={(event) => onCheckChange(event, data[0])}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    {data.map((field) => (\r\n                      <TableCell>{field}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        ) : (\r\n          \"No content performance data to display\"\r\n        )}\r\n      </GraphContainer>\r\n    </>\r\n  );\r\n}\r\n","\r\nimport * as React from 'react';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Link from \"@mui/material/Link\"\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport FormGroup from '@mui/material/FormGroup'\r\nimport Box from '@mui/material/Box'\r\n\r\nexport default function MetricSelection({ metrics, selectedMetrics, onSelect }){\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n  \r\n    return (\r\n      <div>\r\n        <Link aria-describedby={id} onClick={handleClick} sx={{ padding : 0, cursor : \"pointer\"}} color=\"secondary\">\r\n          <Typography sx={{ fontWeight : \"bold\" }}>{selectedMetrics ? selectedMetrics : \"Select a Metric\"}</Typography>\r\n        </Link>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n        >\r\n            <Box p={4}>\r\n                <FormGroup>\r\n                    {metrics.map((metrics, i) => {\r\n\r\n                        const isItemSelected = selectedMetrics ? metrics.label === selectedMetrics : false;\r\n                        const labelId = `enhanced-table-checkbox-${i}`;\r\n\r\n                        return (\r\n                            <FormControlLabel control={<Checkbox color=\"secondary\" onChange={(event) => onSelect(event, metrics.label)} checked={isItemSelected} inputProps={{  'aria-labelledby': labelId, }}  />} label={metrics.label} />\r\n                        )\r\n                    })}\r\n                </FormGroup>\r\n            </Box>\r\n        </Popover>\r\n      </div>\r\n    );\r\n\r\n}","import GraphContainer from \"../ui/GraphContainer\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useEffect, useState } from \"react\";\r\nimport MetricSelection from \"./MetricSelection\";\r\nimport { Typography, Box } from \"@mui/material\";\r\nimport { useDateRange } from \"../../context/DateRangeContext\";\r\nimport moment from \"moment\";\r\n\r\nexport function PageContentGraph({ selectedPath, data, isLoading = true }) {\r\n  const dateRange = useDateRange();\r\n  const [selectedMetricsY1, setSelectedMetricsY1] = useState(null);\r\n  const [selectedMetricsY2, setSelectedMetricsY2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      data &&\r\n      data.datasets[0].label !== \"Loading\" &&\r\n      selectedMetricsY1 === null &&\r\n      selectedMetricsY2 === null\r\n    )\r\n      setSelectedMetricsY1(\"ScreenPageViews\");\r\n  }, [data]);\r\n\r\n  const onSelectY1 = (event, metric) => {\r\n    if (event.target.checked) return setSelectedMetricsY1(metric);\r\n    setSelectedMetricsY1(null);\r\n  };\r\n\r\n  const onSelectY2 = (event, metric) => {\r\n    if (event.target.checked) return setSelectedMetricsY2(metric);\r\n    setSelectedMetricsY2(null);\r\n  };\r\n\r\n  const getY1 = () => {\r\n    if (selectedMetricsY1) {\r\n      return data.datasets\r\n        .filter((data) => data.label === selectedMetricsY1)\r\n        .map((data) => {\r\n          return { ...data, yAxisID: \"y1\" };\r\n        })\r\n        .shift();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getY2 = () => {\r\n    if (selectedMetricsY2) {\r\n      return data.datasets\r\n        .filter((data) => data.label === selectedMetricsY2)\r\n        .map((data) => {\r\n          return { ...data, yAxisID: \"y2\" };\r\n        })\r\n        .shift();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const MetricSelectionComponent = () => {\r\n    return (\r\n      <>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            gap: 2,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <MetricSelection\r\n            metrics={data.datasets}\r\n            selectedMetrics={selectedMetricsY1}\r\n            onSelect={onSelectY1}\r\n          />\r\n          <Typography>vs</Typography>\r\n          <MetricSelection\r\n            metrics={data.datasets}\r\n            selectedMetrics={selectedMetricsY2}\r\n            onSelect={onSelectY2}\r\n          />\r\n        </Box>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const formatTicksY2 = (value, index, ticks) => {\r\n    if (!selectedMetricsY2) return;\r\n    if (selectedMetricsY2.includes(\"Duration\"))\r\n      return moment().startOf(\"day\").seconds(Number(value)).format(\"HH:mm:ss\");\r\n    if (selectedMetricsY2.includes(\"Rate\")) return Math.round(value) + \"%\";\r\n    if (selectedMetricsY2.includes(\"Value\")) return value + \"$\";\r\n\r\n    return value;\r\n  };\r\n\r\n  const formatTicksY1 = (value, index, ticks) => {\r\n    if (!selectedMetricsY1) return;\r\n    if (selectedMetricsY1.includes(\"Duration\"))\r\n      return moment().startOf(\"day\").seconds(Number(value)).format(\"HH:mm:ss\");\r\n    if (selectedMetricsY1.includes(\"Rate\")) return Math.round(value) + \"%\";\r\n    if (selectedMetricsY1.includes(\"Value\")) return value + \"$\";\r\n\r\n    return value;\r\n  };\r\n\r\n  const datasetTicksFormat = (dataSetIndex, value) => {\r\n    if (dataSetIndex === 0) return formatTicksY1(value);\r\n\r\n    return formatTicksY2(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GraphContainer\r\n        title=\"Metric\"\r\n        loading={isLoading}\r\n        subTitle={dateRange.selectedItem}\r\n        rightMenu={<MetricSelectionComponent />}\r\n      >\r\n        <Line\r\n          data={{\r\n            labels: data.labels,\r\n            datasets: [getY1(), getY2()].filter((dataset) => dataset !== null),\r\n          }}\r\n          // width={500}\r\n          height={400}\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            bezierCurve: false,\r\n            tooltips: {\r\n              callbacks: {\r\n                label: function (ticks) {\r\n                  return datasetTicksFormat(ticks.datasetIndex, ticks.value);\r\n                },\r\n                title: function (values) {\r\n                  var { label } = values[0];\r\n                  return moment(label).format(\"YYYY-MM-DD\");\r\n                },\r\n              },\r\n            },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  id: \"y1\",\r\n                  type: \"linear\",\r\n                  position: \"left\",\r\n                  ticks: {\r\n                    callback: formatTicksY1,\r\n                  },\r\n                },\r\n                {\r\n                  id: \"y2\",\r\n                  type: \"linear\",\r\n                  position: \"right\",\r\n                  ticks: {\r\n                    callback: formatTicksY2,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  ticks: {\r\n                    callback: function (value, index, ticks) {\r\n                      return moment(value).format(\"YYYY-MM-DD\");\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </GraphContainer>\r\n    </>\r\n  );\r\n}\r\n","export const request = async (url, option) => {\r\n  const response = await fetch(url, option);\r\n  const result = await response.json();\r\n\r\n  if (!response.ok) throw new Error(result.error);\r\n\r\n  return result;\r\n};\r\n","import { request } from \"../utility/request\";\r\nimport { parseData } from \"../utility/parseData\";\r\n\r\nexport const useAnalyticsApi = (zuid, token) => {\r\n  const dataApiUrl = `${process.env.REACT_APP_SERVICE_GOOGLE_ANALYTICS_GA4_READ}?zuid=${zuid}`;\r\n  const domainApiUrl = `${process.env.REACT_APP_SERVICE_GOOGLE_GA4_PROPERTY_LIST}?zuid=${zuid}`;\r\n\r\n  const getChartData = async (googleId, dateRange, type, filters = []) => {\r\n    const query = {\r\n      dimensions: [{ name: \"date\" }],\r\n      metrics: [\r\n        { name: \"averageSessionDuration\" },\r\n        { name: \"bounceRate\" },\r\n        { name: \"eventValue\" },\r\n        { name: \"screenPageViews\" },\r\n        { name: \"eventsPerSession\" },\r\n        { name: \"conversions\" },\r\n      ],\r\n      dateRanges: [\r\n        { startDate: dateRange.startDate, endDate: dateRange.endDate },\r\n      ],\r\n      orderBys: [\r\n        {\r\n          dimension: { orderType: \"NUMERIC\", dimensionName: \"date\" },\r\n          desc: false,\r\n        },\r\n      ],\r\n    };\r\n\r\n    if (filters.length !== 0) {\r\n      query.dimensionFilter = {\r\n        filter: {\r\n          fieldName: \"pagePath\",\r\n          inListFilter: {\r\n            values: filters,\r\n            caseSensitive: true,\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    const data = await request(dataApiUrl, {\r\n      method: \"POST\",\r\n      credentials: \"omit\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        property: googleId,\r\n        requests: [query],\r\n      }),\r\n    });\r\n\r\n    return parseData(data, type);\r\n  };\r\n\r\n  const getContentPages = async (\r\n    googleId,\r\n    dateRange,\r\n    type,\r\n    filters = [],\r\n    limit = 10\r\n  ) => {\r\n    const query = {\r\n      dimensions: [{ name: \"pagePath\" }],\r\n      metrics: [\r\n        { name: \"averageSessionDuration\" },\r\n        { name: \"bounceRate\" },\r\n        { name: \"eventValue\" },\r\n        { name: \"screenPageViews\" },\r\n        { name: \"eventsPerSession\" },\r\n        { name: \"conversions\" },\r\n      ],\r\n      dateRanges: [\r\n        { startDate: dateRange.startDate, endDate: dateRange.endDate },\r\n      ],\r\n      orderBys: [\r\n        {\r\n          metric: { orderType: \"NUMERIC\", metricName: \"screenPageViews\" },\r\n          desc: true,\r\n        },\r\n      ],\r\n      metricAggregations: [\"TOTAL\"],\r\n      limit: limit,\r\n    };\r\n\r\n    if (filters.length !== 0) {\r\n      query.dimensionFilter = {\r\n        filter: {\r\n          fieldName: \"pagePath\",\r\n          inListFilter: {\r\n            values: filters,\r\n            caseSensitive: true,\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    const data = await request(dataApiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        property: googleId,\r\n        requests: [query],\r\n      }),\r\n    });\r\n\r\n    return parseData(data, type);\r\n  };\r\n\r\n  const getContentSinglePage = async (\r\n    googleId,\r\n    dateRange,\r\n    type,\r\n    filters = [],\r\n    limit = 10\r\n  ) => {\r\n    const query = {\r\n      \r\n      metrics: [\r\n        { name: \"averageSessionDuration\" },\r\n        { name: \"bounceRate\" },\r\n        { name: \"eventValue\" },\r\n        { name: \"screenPageViews\" },\r\n        { name: \"eventsPerSession\" },\r\n        { name: \"conversions\" },\r\n      ],\r\n      dateRanges: [\r\n        { startDate: dateRange.startDate, endDate: dateRange.endDate },\r\n      ],\r\n      orderBys: [\r\n        {\r\n          metric: { orderType: \"NUMERIC\", metricName: \"screenPageViews\" },\r\n          desc: true,\r\n        },\r\n      ],\r\n      metricAggregations: [\"TOTAL\"],\r\n      limit: limit,\r\n    };\r\n\r\n    if (filters.length !== 0) {\r\n      query.dimension = [{ name: \"pagePath\" }]\r\n      query.dimensionFilter = {\r\n        filter: {\r\n          fieldName: \"pagePath\",\r\n          inListFilter: {\r\n            values: filters,\r\n            caseSensitive: true,\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    const data = await request(dataApiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        property: googleId,\r\n        requests: [query],\r\n      }),\r\n    });\r\n\r\n    return parseData(data, type);\r\n  };\r\n  \r\n  \r\n\r\n  const getGaDomain = () => {\r\n    return request(domainApiUrl, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  };\r\n\r\n  // const getPageJourney = (googleId, dateRange) => {\r\n  //   return request(dataApiUrl, {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"content-type\": \"text/plain\",\r\n  //     },\r\n  //     body: JSON.stringify({\r\n  //       gaRequest: {\r\n  //         reportRequests: {\r\n  //           viewId: googleId,\r\n  //           includeEmptyRows: true,\r\n  //           dateRanges: [\r\n  //             { startDate: dateRange.startDate, endDate: dateRange.endDate },\r\n  //           ],\r\n  //           metrics: [\r\n  //             { expression: \"ga:sessions\" },\r\n  //             { expression: \"ga:pageviews\" },\r\n  //           ],\r\n  //           dimensions: [\r\n  //             { name: \"ga:previousPagePath\" },\r\n  //             { name: \"ga:pagePath\" },\r\n  //           ],\r\n  //           orderBys: [\r\n  //             {\r\n  //               fieldName: \"ga:previousPagePath\",\r\n  //               sortOrder: \"ASCENDING\",\r\n  //             },\r\n  //             {\r\n  //               fieldName: \"ga:sessions\",\r\n  //               sortOrder: \"DESCENDING\",\r\n  //             },\r\n  //           ],\r\n  //         },\r\n  //       },\r\n  //     }),\r\n  //   });\r\n  // };\r\n\r\n  const getPageJourney = async (googleId, dateRange, token) => {\r\n    const res = await request(dataApiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        property: googleId,\r\n        requests: [\r\n          {\r\n            dimensions: [{ name: \"pageReferrer\" }, { name: \"pagePath\" }],\r\n            metrics: [{ name: \"sessions\" }, { name: \"screenPageViews\" }],\r\n            dateRanges: [\r\n              { startDate: dateRange.startDate, endDate: dateRange.endDate },\r\n            ],\r\n            orderBys: [{ metric: { metricName: \"sessions\" }, desc: true }],\r\n            metricAggregations: [\"TOTAL\"],\r\n          },\r\n        ],\r\n      }),\r\n    });\r\n\r\n    const data = parseData(res);\r\n    let googleData = data.googleData;\r\n    googleData.reports[0].data.rows = data.googleData.reports[0].data.rows.map(\r\n      (row) => {\r\n        let pageReferrer = row.dimensions[0];\r\n        if (pageReferrer.includes(\"https://www.zesty.io\")) {\r\n          pageReferrer = pageReferrer.replace(\"https://www.zesty.io\", \"\");\r\n        }\r\n        if (\r\n          pageReferrer.includes(\"https\") ||\r\n          pageReferrer.includes(\"http\") ||\r\n          pageReferrer === \"\"\r\n        ) {\r\n          pageReferrer = \"(entrance)\";\r\n        }\r\n\r\n        return {\r\n          ...row,\r\n          dimensions: [pageReferrer, row.dimensions[1]],\r\n        };\r\n      }\r\n    );\r\n\r\n    return {\r\n      ...data,\r\n      googleData: googleData,\r\n    };\r\n  };\r\n\r\n  return {\r\n    getChartData,\r\n    getContentPages,\r\n    getGaDomain,\r\n    getPageJourney,\r\n    getContentSinglePage\r\n  };\r\n};\r\n","import { Card, Grid, Box, Typography, Divider } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport function PageContentTableSummary({ data, selectedPath, tableData }) {\r\n  const [summaryData, setSummaryData] = useState([]);\r\n  const [formatSelectedData, setFormatSeletedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (tableData.length !== 0) {\r\n      let result = [];\r\n      let formatChartData = null;\r\n      // const returnData = formatData(selectedPath.length === 0 ? data : chartData)\r\n      const returnData = formatData(data);\r\n      if (selectedPath.length !== 0) formatChartData = formatData(tableData);\r\n\r\n      returnData.forEach((value, i) => {\r\n        result.push({\r\n          ...value,\r\n          selectedValue:\r\n            formatChartData !== null ? formatChartData[i].data : value.data,\r\n        });\r\n      });\r\n\r\n      setSummaryData(result);\r\n    }\r\n  }, [tableData, selectedPath, data]);\r\n\r\n  const formatHeaderText = (text) => {\r\n    return text\r\n      .replace(\"ga:\", \"\")\r\n      .replace(/([A-Z])/g, \" $1\")\r\n      .trim();\r\n  };\r\n\r\n  const formatData = (data) => {\r\n    let objArray = [];\r\n\r\n    var metricHeader =\r\n      data.reports[0].columnHeader.metricHeader.metricHeaderEntries.map(\r\n        (metric) => formatHeaderText(metric.name)\r\n      );\r\n    var metricData = data.reports[0].data.totals[0].values.map((value, i) => {\r\n      return Number(Math.round(value + \"e\" + 2) + \"e-\" + 2);\r\n    });\r\n\r\n    metricHeader.forEach((value, i) => {\r\n      objArray.push({\r\n        label: value,\r\n        data: metricData[i],\r\n      });\r\n    });\r\n\r\n    return objArray;\r\n  };\r\n\r\n  const avg = (num1, num2) => {\r\n    if (num1 == 0 || num2 == 0) return 0;\r\n\r\n    var startPos = 0;\r\n    var endPos = Number(num1);\r\n    var currentPos = Number(num2);\r\n\r\n    var distance = endPos - startPos;\r\n    var displacement = currentPos - startPos;\r\n\r\n    return Math.round((displacement / distance) * 100);\r\n  };\r\n\r\n  const time = (value) => {\r\n    return moment().startOf(\"day\").seconds(Number(value)).format(\"HH:mm:ss\");\r\n  };\r\n\r\n  const GridItem = (props) => (\r\n    <>\r\n      <Grid item sx={{ padding: 3 }}>\r\n        <Typography\r\n          sx={{ fontWeight: \"bold\", fontSize: \"10pt\", color: \"#5b667d\" }}\r\n        >\r\n          {props.label}\r\n        </Typography>\r\n        <Box sx={{ marginTop: \"5px\" }}>\r\n          <Typography\r\n            color=\"secondary\"\r\n            sx={{ fontSize: \"18pt\", fontWeight: \"bold\", marginBottom: \"5px\" }}\r\n          >\r\n            {props.selectedValue !== null ? props.selectedValue : props.data}\r\n          </Typography>\r\n          <Typography sx={{ fontSize: \"10pt\" }}>{`% of Total : ${avg(\r\n            props.data,\r\n            props.selectedValue\r\n          )}%`}</Typography>\r\n          <Typography\r\n            sx={{ fontSize: \"10pt\", color: \"#5b667d\" }}\r\n          >{`(${props.data})`}</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n    </>\r\n  );\r\n  const GridItemTime = (props) => (\r\n    <>\r\n      <Grid item sx={{ padding: 3 }}>\r\n        <Typography\r\n          sx={{ fontWeight: \"bold\", fontSize: \"10pt\", color: \"#5b667d\" }}\r\n        >\r\n          {props.label}\r\n        </Typography>\r\n        <Box sx={{ marginTop: \"5px\" }}>\r\n          <Typography\r\n            color=\"secondary\"\r\n            sx={{ fontSize: \"18pt\", fontWeight: \"bold\", marginBottom: \"5px\" }}\r\n          >\r\n            {time(\r\n              props.selectedValue !== null ? props.selectedValue : props.data\r\n            )}\r\n          </Typography>\r\n          <Typography sx={{ fontSize: \"10pt\" }}>{`Avg for view: ${time(\r\n            props.data\r\n          )}`}</Typography>\r\n          <Typography sx={{ fontSize: \"10pt\", color: \"#5b667d\" }}>{`( ${avg(\r\n            props.data,\r\n            props.selectedValue\r\n          )}%)`}</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n    </>\r\n  );\r\n\r\n  const GridItemRate = (props) => (\r\n    <>\r\n      <Grid item sx={{ padding: 3 }}>\r\n        <Typography\r\n          sx={{ fontWeight: \"bold\", fontSize: \"10pt\", color: \"#5b667d\" }}\r\n        >\r\n          {props.label}\r\n        </Typography>\r\n        <Box sx={{ marginTop: \"5px\" }}>\r\n          <Typography\r\n            color=\"secondary\"\r\n            sx={{ fontSize: \"18pt\", fontWeight: \"bold\", marginBottom: \"5px\" }}\r\n          >\r\n            {props.selectedValue !== null ? props.selectedValue : props.data}%\r\n          </Typography>\r\n          <Typography sx={{ fontSize: \"10pt\" }}>{`Avg for view : ${avg(\r\n            props.data,\r\n            props.selectedValue\r\n          )}%`}</Typography>\r\n          <Typography\r\n            sx={{ fontSize: \"10pt\", color: \"#5b667d\" }}\r\n          >{`(${props.data}%)`}</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          {summaryData.length !== 0 &&\r\n            summaryData.map((value) => {\r\n              if (value.label.includes(\"TIME\"))\r\n                return <GridItemTime {...value} />;\r\n              if (value.label.includes(\"RATE\"))\r\n                return <GridItemRate {...value} />;\r\n\r\n              return <GridItem {...value} />;\r\n            })}\r\n        </Grid>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDateRange } from \"../../context/DateRangeContext\";\r\nimport { useGoogle } from \"../../context/GoogleContext\";\r\nimport shelldata from \"../ui/ShellData/shelldata\";\r\nimport { Box } from \"@mui/material\";\r\nimport { PageContentTable } from \"./PageContentTable\";\r\nimport { PageContentGraph } from \"./PageContentGraph\";\r\nimport { useNotify } from \"../../context/SnackBarContext\";\r\nimport { useAnalyticsApi } from \"../../services/useAnalyticsApi\";\r\nimport { PageContentTableSummary } from \"./PageContentTableSummary\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nexport default function PageContent({ instance, token }) {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const { getChartData, getContentPages } = useAnalyticsApi(\r\n    instance.ZUID,\r\n    token\r\n  );\r\n  const notify = useNotify();\r\n  const dateRange = useDateRange();\r\n  const { googleDetails } = useGoogle();\r\n  const [selectedPagePath, setSelectedPagePath] = useState([]);\r\n  const [chartData, setChartData] = useState(shelldata.shellBarData);\r\n  const [googleData, setGoogleData] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get(\"q\"))\r\n      return setSelectedPagePath([searchParams.get(\"q\")]);\r\n    setSelectedPagePath([]);\r\n  }, [searchParams]);\r\n\r\n  useEffect(async () => {\r\n    if (googleDetails) {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getChartData(\r\n          googleDetails.name,\r\n          dateRange,\r\n          \"bar\",\r\n          selectedPagePath\r\n        );\r\n        const tableData = await getContentPages(\r\n          googleDetails.name,\r\n          dateRange,\r\n          \"bar\",\r\n          selectedPagePath,\r\n          10\r\n        );\r\n        setChartData(data.chartJSData);\r\n        setTableData(tableData);\r\n        setGoogleData(tableData.googleData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n        return notify.current.error(\"Error : Unable to fetch analytics data.\");\r\n      }\r\n    }\r\n  }, [googleDetails, selectedPagePath, dateRange]);\r\n\r\n  const onCheckChange = (event, name) => {\r\n    if (event.target.checked)\r\n      return setSelectedPagePath([...selectedPagePath, name]);\r\n    setSelectedPagePath(selectedPagePath.filter((site) => site !== name));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <PageContentGraph\r\n            selectedPath={selectedPagePath}\r\n            data={chartData}\r\n            isLoading={loading}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <PageContentTableSummary\r\n            selectedPath={selectedPagePath}\r\n            data={tableData.googleData}\r\n            tableData={googleData}\r\n            isLoading={loading}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <PageContentTable\r\n            selectedPagePath={selectedPagePath}\r\n            tableData={tableData}\r\n            onCheckChange={onCheckChange}\r\n            isLoading={loading}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import Slider from '@mui/material/Slider';\r\n\r\n\r\nexport default function Slicer({ value = 10, onChange }){\r\n\r\n    return (\r\n        <>\r\n            <Slider\r\n                aria-label=\"Small steps\"\r\n                defaultValue={value}\r\n                step={1}\r\n                marks\r\n                min={1}\r\n                max={20}\r\n                valueLabelDisplay=\"auto\"\r\n                sx={{\r\n                    width : 200\r\n                }}\r\n                valueLabelFormat={value => `${value} Journey${value !== 1 ? 's' : ''}`}\r\n                onChange={event => onChange(event)}\r\n                color=\"secondary\"\r\n            />\r\n        </>\r\n    )\r\n\r\n}","import TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function EntranceSelector({ data, value, onChange}){\r\n    return (\r\n        <Autocomplete\r\n          disablePortal\r\n          id=\"combo-box-demo\"\r\n          value={value === null ? data[-1] : value}\r\n          onChange={(event, newValue) => onChange(newValue)}\r\n          options={data}\r\n          sx={{ width: 300 }}\r\n          renderInput={(params) => <TextField {...params} size=\"small\" label=\"Filter By Entrance\" />}\r\n        />\r\n      );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nexport default function JourneyGraph({ data, filter, slice }) {\r\n  const [graphData, setGraphData] = useState(null);\r\n  const [summary, setSummary] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const formatData = formatJourney(data.googleData);\r\n      setGraphData(formatData);\r\n    }\r\n  }, [data, filter, slice]);\r\n\r\n  const formatJourney = (data) => {\r\n    let raw = data.reports[0].data.rows;\r\n    let totals = data.reports[0].data.totals[0].values[1];\r\n    let levels = {};\r\n    let i = 1;\r\n\r\n    if (!raw) return null;\r\n\r\n    do {\r\n      if (i === 1) {\r\n        var filterData = raw.filter(\r\n          (item) => item.dimensions[0] === \"(entrance)\"\r\n        );\r\n        raw = removeArray(raw, filterData);\r\n        levels[`Level${i}`] =\r\n          filter !== null\r\n            ? filterData\r\n                .filter((item) => item.dimensions[1] === filter.label)\r\n                .slice(0, slice)\r\n            : filterData.slice(0, slice);\r\n      } else {\r\n        let bufferData = [];\r\n        levels[`Level${i - 1}`].forEach((data, i) => {\r\n          let levelData = raw.filter(\r\n            (item) => data.dimensions[1] === item.dimensions[0]\r\n          );\r\n          if (levelData.length !== 0) bufferData.push(...levelData);\r\n        });\r\n        raw = removeArray(raw, bufferData);\r\n        levels[`Level${i}`] = bufferData.sort(compare).slice(0, slice);\r\n      }\r\n      i = i + 1;\r\n    } while (i < 20);\r\n\r\n    let sankeyData = [[\"From\", \"To\", \"Visit\"]];\r\n    for (var key in levels) {\r\n      if (levels.hasOwnProperty(key)) {\r\n        levels[key].forEach((item) => {\r\n          if (\r\n            item.dimensions[0] !== item.dimensions[1] &&\r\n            !ifSankeyExist(sankeyData, item)\r\n          )\r\n            sankeyData.push([\r\n              item.dimensions[0],\r\n              item.dimensions[1],\r\n              Number(item.metrics[0].values[1]),\r\n            ]);\r\n        });\r\n      }\r\n    }\r\n\r\n    const maxEntrance = sankeyData\r\n      .filter((value) => value[0] === \"(entrance)\")\r\n      .reduce((prev, current) => (prev[2] > current[2] ? prev : current), []);\r\n    const maxPage = sankeyData\r\n      .filter((value) => value[0] === maxEntrance[1])\r\n      .reduce((prev, current) => (prev[2] > current[2] ? prev : current), []);\r\n\r\n    setSummary({\r\n      entrance: maxEntrance,\r\n      page: maxPage,\r\n      aveVisit: ave(totals, maxPage.length !== 0 ? maxPage[2] : maxEntrance[2]),\r\n    });\r\n    return sankeyData;\r\n  };\r\n\r\n  const ave = (a, b) => {\r\n    return ((b / a) * 100).toFixed(2);\r\n  };\r\n\r\n  const ifSankeyExist = (base, data) => {\r\n    let value = false;\r\n\r\n    base.forEach((items) => {\r\n      if (items[0] === data.dimensions[0] && items[1] === data.dimensions[1]) {\r\n        value = true;\r\n      }\r\n      if (items[0] === data.dimensions[1]) {\r\n        value = true;\r\n      }\r\n    });\r\n\r\n    return value;\r\n  };\r\n\r\n  const compare = (a, b) => {\r\n    if (a.metrics[0].values[1] > b.metrics[0].values[1]) {\r\n      return -1;\r\n    }\r\n    if (a.metrics[0].values[1] < b.metrics[0].values[1]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const removeArray = (base, remove) => {\r\n    let newArray = [];\r\n\r\n    base.forEach((item) => {\r\n      if (!remove.includes(item)) newArray.push(item);\r\n    });\r\n\r\n    return newArray;\r\n  };\r\n\r\n  var colors = [\r\n    \"#7a56ff\",\r\n    \"#36a2eb\",\r\n    \"#ffce56\",\r\n    \"#41ead4\",\r\n    \"#ff0022\",\r\n    \"#56ff7a\",\r\n    \"#ff56db\",\r\n    \"#ff7a56\",\r\n    \"#56dbff\",\r\n    \"#7a56ff\",\r\n    \"#36a2eb\",\r\n    \"#ffce56\",\r\n    \"#41ead4\",\r\n    \"#ff0022\",\r\n    \"#56ff7a\",\r\n    \"#ff56db\",\r\n    \"#ff7a56\",\r\n    \"#56dbff\",\r\n  ];\r\n\r\n  var options = {\r\n    sankey: {\r\n      node: {\r\n        nodePadding: 20,\r\n        colors: colors,\r\n      },\r\n      link: {\r\n        colorMode: \"gradient\",\r\n        colors: colors,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: \"100%\", height: 1000 }}>\r\n        {graphData !== null && (\r\n          <>\r\n            <Box\r\n              sx={{\r\n                textAlign: \"right\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n            >\r\n              {summary.page.length !== 0 &&\r\n                `The top page \"${summary.page[1]}\" from the \"${summary.entrance[1]}\" entrance received ${summary.page[2]} visits (${summary.aveVisit}%) of traffic flow`}\r\n              {summary.page.length === 0 &&\r\n                `The page \"${summary.entrance[1]}\" received ${summary.entrance[2]} visits (${summary.aveVisit}%) of traffic flow`}\r\n            </Box>\r\n            <Chart\r\n              chartType=\"Sankey\"\r\n              width=\"100%\"\r\n              height={900}\r\n              data={\r\n                graphData === null\r\n                  ? [\r\n                      [\"From\", \"To\", \"Visit\"],\r\n                      [\"From\", \"To\", 0],\r\n                    ]\r\n                  : graphData\r\n              }\r\n              options={options}\r\n            />\r\n          </>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { useGoogle } from \"../../context/GoogleContext\";\r\nimport { useDateRange } from \"../../context/DateRangeContext\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { useAnalyticsApi } from \"../../services/useAnalyticsApi\";\r\nimport GraphContainer from \"../ui/GraphContainer\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Slicer from \"./Slicer\";\r\nimport EntranceSelector from \"./EntranceSelector\";\r\nimport { useNotify } from \"../../context/SnackBarContext\";\r\nimport JourneyGraph from \"./JourneyGraph\";\r\n\r\nexport default function Journey({ instance, token }) {\r\n  const notify = useNotify();\r\n  const { googleDetails } = useGoogle();\r\n  const dateRange = useDateRange();\r\n  const { getPageJourney } = useAnalyticsApi(instance.ZUID);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [slice, setSlice] = useState(10);\r\n  const [url, setUrl] = useState(null);\r\n  const [entranceUrl, setEntranceUrl] = useState([]);\r\n  const [rawData, setRawData] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    if (googleDetails) {\r\n      try {\r\n        setIsLoading(true);\r\n        const responseJourney = await getPageJourney(\r\n          googleDetails.name,\r\n          dateRange,\r\n          token\r\n        );\r\n        const entrances = getEntranceUrl(responseJourney.googleData);\r\n\r\n        setRawData(responseJourney);\r\n        setEntranceUrl(entrances);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setIsLoading(false);\r\n        return notify.current.error(error.message);\r\n      }\r\n    }\r\n  }, [googleDetails, dateRange]);\r\n\r\n  const debounce = (func) => {\r\n    let timer;\r\n    return function (...args) {\r\n      const context = this;\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        timer = null;\r\n        func.apply(context, args);\r\n      }, 500);\r\n    };\r\n  };\r\n\r\n  const handleSliceChange = (event) => {\r\n    setSlice(event.target.value);\r\n  };\r\n  const handleUrlChange = (value) => {\r\n    if (value === null) return setUrl(null);\r\n    setUrl(value);\r\n  };\r\n\r\n  const optimizeSliceChange = useCallback(debounce(handleSliceChange), []);\r\n\r\n  const getEntranceUrl = (data) => {\r\n    let raw = data.reports[0].data.rows;\r\n    if (!raw) return [];\r\n    var filterData = raw.filter((item) => item.dimensions[0] === \"(entrance)\");\r\n    var url = filterData.map((item) => {\r\n      return {\r\n        label: item.dimensions[1],\r\n      };\r\n    });\r\n\r\n    return url;\r\n  };\r\n\r\n  const RightComponent = () => (\r\n    <Box sx={{ display: \"flex\", gap: 4, alignItems: \"center\" }}>\r\n      <EntranceSelector\r\n        data={entranceUrl}\r\n        value={url}\r\n        onChange={handleUrlChange}\r\n      />\r\n      <Slicer value={slice} onChange={optimizeSliceChange} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <GraphContainer\r\n        title=\"User Journey - Beta\"\r\n        subTitle={dateRange.selectedItem}\r\n        loading={isLoading}\r\n        rightMenu={<RightComponent />}\r\n      >\r\n        <JourneyGraph data={rawData} filter={url} slice={slice} />\r\n      </GraphContainer>\r\n    </>\r\n  );\r\n}\r\n","import { request } from \"../utility/request\";\r\n\r\nexport const useFetchWrapper = (zuid, token) => {\r\n  const ZestyAPI = new window.Zesty.FetchWrapper(zuid, token, {\r\n    authAPIURL: `${process.env.REACT_APP_AUTH_API}`,\r\n    instancesAPIURL: `${process.env.REACT_APP_INSTANCE_API}`,\r\n    accountsAPIURL: `${process.env.REACT_APP_ACCOUNTS_API}`,\r\n    mediaAPIURL: `${process.env.REACT_APP_MEDIA_API}`,\r\n    sitesServiceURL: `${process.env.REACT_APP_SITES_SERVICE}`,\r\n  });\r\n\r\n  const getGoogleSetting = async () => {\r\n    const settings = await ZestyAPI.getSettings();\r\n    // if (Object.keys(settings.data).length === 0)\r\n\r\n    return settings.data.find(\r\n      (setting) => setting.key === \"google_property_id\"\r\n    );\r\n  };\r\n\r\n  const getGooglePropertyID = async () => {\r\n    const settings = await ZestyAPI.getSettings();\r\n    // if (Object.keys(settings.data).length === 0)\r\n\r\n    return settings.data.find(\r\n      (setting) => setting.key === \"google_property_id\"\r\n    );\r\n  };\r\n\r\n  const getUserData = async () => {\r\n    return await ZestyAPI.verify();\r\n  };\r\n\r\n  const updateSetting = async (settingZuid, data) => {\r\n    return await ZestyAPI.updateSetting(settingZuid, data);\r\n  };\r\n\r\n  const searchItems = async (filter) => {\r\n    const result = await fetch(\r\n      `https://${\r\n        zuid + process.env.REACT_APP_INSTANCE_API\r\n      }/search/items?q=${filter}&order=created&dir=DESC`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    const data = await result.json();\r\n    return data;\r\n  };\r\n\r\n  const createGa4Setting = async () => {\r\n    return await request(\r\n      `https://${zuid + process.env.REACT_APP_INSTANCE_API}/env/settings`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          category: \"analytics\",\r\n          key: \"google_property_id\",\r\n          keyFriendly: \"Google Property ID\",\r\n          value: \"\",\r\n          dataType: \"text\",\r\n        }),\r\n      }\r\n    );\r\n  };\r\n\r\n  return {\r\n    getGoogleSetting,\r\n    getUserData,\r\n    updateSetting,\r\n    searchItems,\r\n    getGooglePropertyID,\r\n    createGa4Setting,\r\n  };\r\n};\r\n","\r\nimport { useState, useEffect } from 'react'\r\nimport Popover from '@mui/material/Popover';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport moment from 'moment'\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport { useDateRange, useDateRangeUpdate } from '../../../context/DateRangeContext'\r\nimport EastIcon from '@mui/icons-material/East';\r\n\r\nexport function CustomDatePicker(){\r\n    const dateRange = useDateRange()\r\n    const dateRangeUpdate = useDateRangeUpdate()\r\n\r\n    const [anchorEl, setAnchorEl ] = useState(null);\r\n    const open = Boolean(anchorEl)\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget);\r\n\r\n    const handleClose = () => setAnchorEl(null);\r\n    \r\n    const handleSelect = (event) => {   \r\n\r\n        const selectedItem = event.target.value\r\n        if(selectedItem === \"Today\"){\r\n            dateRangeUpdate({\r\n                selectedItem : \"Today\",\r\n                startDate : moment().format(\"YYYY-MM-DD\"),\r\n                endDate : moment().format(\"YYYY-MM-DD\")\r\n            })\r\n        }\r\n\r\n        if(selectedItem === \"Yesterday\"){\r\n            dateRangeUpdate({\r\n                selectedItem : \"Yesterday\",\r\n                startDate : moment().subtract(1, \"days\").format(\"YYYY-MM-DD\"),\r\n                endDate : moment().format(\"YYYY-MM-DD\")\r\n            })\r\n        }\r\n\r\n        if(selectedItem === \"Last Week\"){\r\n            dateRangeUpdate({\r\n                selectedItem : \"Last Week\",\r\n                startDate : moment().subtract(1, \"weeks\").startOf(\"week\").format(\"YYYY-MM-DD\"),\r\n                endDate : moment().subtract(1, \"weeks\").endOf(\"week\").format(\"YYYY-MM-DD\"),\r\n            })\r\n        }\r\n\r\n        if(selectedItem === \"Last Month\"){\r\n            dateRangeUpdate({\r\n                selectedItem : \"Last Month\",\r\n                startDate : moment().subtract(1, \"months\").startOf(\"month\").format(\"YYYY-MM-DD\"),\r\n                endDate : moment().subtract(1, \"months\").endOf(\"month\").format(\"YYYY-MM-DD\"),\r\n            })\r\n        }\r\n\r\n        if(selectedItem === \"Last 7 Days\"){\r\n            dateRangeUpdate({\r\n                selectedItem : \"Last 7 Days\",\r\n                startDate : moment().subtract(7, \"days\").format(\"YYYY-MM-DD\"),\r\n                endDate : moment().format(\"YYYY-MM-DD\"),\r\n            })\r\n        }\r\n\r\n        if(selectedItem === \"Last 30 Days\"){\r\n            dateRangeUpdate({\r\n                selectedItem : \"Last 30 Days\",\r\n                startDate : moment().subtract(30, \"days\").startOf(\"month\").format(\"YYYY-MM-DD\"),\r\n                endDate : moment().format(\"YYYY-MM-DD\"),\r\n            })\r\n        }\r\n\r\n        if(selectedItem === \"Custom\"){\r\n            dateRangeUpdate({\r\n                selectedItem : \"Custom\",\r\n                startDate : moment().format(\"YYYY-MM-DD\"),\r\n                endDate : moment().format(\"YYYY-MM-DD\"),\r\n            })\r\n        }\r\n    }\r\n\r\n    const onDateChange = (event) => {\r\n        dateRangeUpdate({\r\n            ...dateRange, \r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ display : \"flex\", alignItems : \"center\", justifyContent : \"center\", gap : 4 }}>\r\n                <Typography variant=\"body2\" sx={{ \r\n                        color: \"#5b667d\", \r\n                        fontWeight : \"bold\", \r\n                        display : \"flex\", \r\n                        alignItems : \"center\", \r\n                        gap : 2 \r\n                }}>{dateRange.startDate} <EastIcon /> {dateRange.endDate}</Typography>\r\n                <Button aria-describedby={id} variant=\"contained\" onClick={handleClick} color=\"secondary\" startIcon={<CalendarMonthIcon />}>\r\n                    Change Date Range\r\n                </Button>\r\n            </Box>\r\n           \r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n                }}\r\n            >\r\n              <Box sx={{ \r\n                    minWidth: 200, \r\n                    padding : 4,\r\n                    display : \"flex\",\r\n                    flexDirection : \"column\",\r\n                    gap: 2\r\n                }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={dateRange.selectedItem}\r\n                            label=\"Date Range\"\r\n                            onChange={handleSelect}\r\n                        >\r\n                            <MenuItem value=\"Custom\">Custom</MenuItem>\r\n                            <MenuItem value=\"Today\">Today</MenuItem>\r\n                            <MenuItem value=\"Yesterday\">Yesterday</MenuItem>\r\n                            <MenuItem value=\"Last Week\">Last Week</MenuItem>\r\n                            <MenuItem value=\"Last Month\">Last Month</MenuItem>\r\n                            <MenuItem value=\"Last 7 Days\">Last 7 Days</MenuItem>\r\n                            <MenuItem value=\"Last 30 Days\">Last 30 Days</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    { dateRange.selectedItem === \"Custom\" && (\r\n                        <>\r\n                            <TextField\r\n                                name=\"startDate\"\r\n                                label=\"Start Date\"\r\n                                InputLabelProps={{ shrink: true, required: true }}\r\n                                type=\"date\"\r\n                                defaultValue={dateRange.startDate}\r\n                                onBlur={onDateChange}\r\n                                inputProps={{\r\n                                    max : dateRange.endDate,\r\n                                    required : true,\r\n                                }}\r\n                                \r\n                            />\r\n                            <TextField\r\n                                name=\"endDate\"\r\n                                label=\"End Date\"\r\n                                InputLabelProps={{ shrink: true, required: true }}\r\n                                type=\"date\"\r\n                                defaultValue={dateRange.endDate}\r\n                                onBlur={onDateChange}\r\n                                inputProps={{\r\n                                    min:dateRange.startDate,\r\n                                    required : true\r\n                                }}\r\n                                \r\n                            />\r\n                        </>\r\n                    ) }\r\n                    \r\n            </Box>\r\n            </Popover>\r\n        </>\r\n    );\r\n\r\n}","import Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableFooter from \"@mui/material/TableFooter\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\";\r\nimport { useState } from \"react\";\r\n\r\nconst DomainTable = ({ domains = [], onCellClick, selectedDomain }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Card}>\r\n        {domains.length !== 0 ? (\r\n          <Table sx={{ minWidth: \"600px\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Typography sx={{ fontWeight: \"600\", width: 200 }}>\r\n                    Property Name\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography sx={{ fontWeight: \"600\" }}>Url</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography sx={{ fontWeight: \"600\" }}>\r\n                    Property Id\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n                ? domains.slice(\r\n                    page * rowsPerPage,\r\n                    page * rowsPerPage + rowsPerPage\r\n                  )\r\n                : domains\r\n              ).map((domain) => (\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <Typography sx={{ fontSize: \"12pt\" }}>\r\n                      {domain.displayName}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography sx={{ fontSize: \"12pt\" }}>\r\n                      {domain.dataStreams[0]?.webStreamData?.defaultUri ||\r\n                        \"Domain not set\"}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography sx={{ fontSize: \"12pt\" }}>\r\n                      {domain.name}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell sx={{ textAlign: \"center\" }}>\r\n                    {selectedDomain && selectedDomain.name === domain.name ? (\r\n                      <>\r\n                        <CheckCircleRoundedIcon color=\"success\" />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          onClick={() => onCellClick(domain)}\r\n                        >\r\n                          Select\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[]}\r\n                  colSpan={5}\r\n                  count={domains.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  SelectProps={{\r\n                    inputProps: {\r\n                      \"aria-label\": \"rows per page\",\r\n                    },\r\n                    native: true,\r\n                  }}\r\n                  onPageChange={handleChangePage}\r\n                  onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        ) : (\r\n          <Box\r\n            sx={{\r\n              padding: 4,\r\n              minWidth: \"600px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Typography sx={{ fontWeight: 600 }} variant=\"h5\">\r\n              There is no domain to select.\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DomainTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DomainTable from \"./DomainTable\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Card,\r\n} from \"@mui/material\";\r\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\r\n\r\nexport default function DomainPicker({\r\n  onSelect,\r\n  domainList,\r\n  domainSelect,\r\n  buttonName = \"Select Domain\",\r\n  variant = \"contained\",\r\n  size = \"\",\r\n  show = false,\r\n}) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setShowModal(show);\r\n  }, [show]);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant={variant}\r\n        color=\"secondary\"\r\n        onClick={() => setShowModal(true)}\r\n        size={size}\r\n      >\r\n        {buttonName}\r\n      </Button>\r\n      <Modal\r\n        open={showModal}\r\n        onClose={() => setShowModal(false)}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Card\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            padding: 4,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              paddingBottom: 4,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                flexGrow: 1,\r\n                paddingRight: 4,\r\n              }}\r\n            >\r\n              <Typography sx={{ fontWeight: 600, fontSize: \"14pt\" }}>\r\n                Choose from domain list\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  fontWeight: 300,\r\n                  fontSize: \"12pt\",\r\n                }}\r\n              >\r\n                Choosing a domain will update your google property id. This\r\n                change updates production when your cache is refreshed\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"button\"\r\n                onClick={() => setShowModal(false)}\r\n              >\r\n                <CloseRoundedIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Box>\r\n\r\n          <DomainTable\r\n            domains={domainList}\r\n            onCellClick={onSelect}\r\n            selectedDomain={domainSelect}\r\n          />\r\n        </Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box'\r\nimport Paper from '@mui/material/Paper'\r\nimport Divider from '@mui/material/Divider'\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function SearchBarFilterMenu({ data, isTyping, onMenuClick}){\r\n\r\n\r\n    return (\r\n        <>\r\n            <Paper sx={{\r\n                maxHeight : \"400px\",\r\n                overflowY : \"auto\",\r\n                width : \"600px\" \r\n            }}>\r\n                {isTyping && (\r\n                    <>\r\n                        <Box sx={{ \r\n                                display : \"flex\",\r\n                                alignItems : \"center\",\r\n                                justifyContent : \"center\",\r\n                                height : \"100px\" }}>\r\n                            <CircularProgress />\r\n                        </Box>\r\n                    </>\r\n                )}\r\n                {data && !isTyping && data.length !== 0 && (\r\n                    <List>\r\n                    {data.map(value => (\r\n                        <>\r\n                            {value.path && (\r\n                                <>\r\n                                <ListItemButton onClick={() => onMenuClick(`/content?q=${value.path}`)}>\r\n                                    <ListItemText primary={value.metaTitle} secondary={value.path} />\r\n                                </ListItemButton>\r\n                                <Divider />\r\n                                </>\r\n                            )}\r\n                        </>\r\n                        \r\n                    ))}\r\n                </List>\r\n                )}\r\n                {(data && !isTyping && data.length === 0 ) && (\r\n                    <>\r\n                        <Box sx={{ \r\n                                display : \"flex\",\r\n                                alignItems : \"center\",\r\n                                justifyContent : \"center\",\r\n                                height : \"100px\" }}>\r\n                            <Typography sx={{\r\n                                fontWeight : \"bold\"\r\n                            }}>No Data Found</Typography>\r\n                        </Box>\r\n                    </>\r\n                )}\r\n            </Paper>\r\n            \r\n        </>\r\n    )\r\n\r\n}","\r\nimport { useState, useEffect, useCallback } from 'react'\r\nimport { TextField, InputAdornment, Popper, Paper,Autocomplete, Box, Typography, Divider, ClickAwayListener } from \"@mui/material\"\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SearchBarFilterMenu from './SearchBarFilterMenu';\r\nimport { useFetchWrapper } from '../../../services/useFetchWrapper';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function SearchBar({ zuid, token }){\r\n\r\n    const navigate = useNavigate()\r\n    const { searchItems } = useFetchWrapper(zuid, token)\r\n    const [isTyping, setIsTyping] = useState(false)\r\n    const [anchor, setAnchorEl] = useState(null);\r\n    const [data, setData] = useState(null)\r\n    const [selectedData, setSelectedData] = useState(\"\")\r\n\r\n    const focus = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const id = \"popperMenu\";\r\n\r\n    const onMenuClick = (url) => {\r\n        navigate(url)\r\n        handleClose()\r\n    }\r\n\r\n    const handleChange = async (event) => {\r\n        setIsTyping(true)\r\n        \r\n        const searchItem = event.target.value\r\n        setSelectedData(searchItem)\r\n\r\n        if(searchItem === \"\") return\r\n\r\n        const result = await searchItems(searchItem)\r\n        const filteredResult = formatResult(result)\r\n        setData(filteredResult)\r\n        setIsTyping(false)\r\n    }\r\n\r\n    const formatResult = (result) => {\r\n\r\n        return result.data.filter(value => value.web.path !== null).map(value => value.web)\r\n\r\n    }\r\n\r\n    const debounce = (func) => {\r\n        let timer;\r\n        return function (...args){\r\n            const context = this;\r\n            if(timer) clearTimeout(timer)\r\n            timer = setTimeout(() => {\r\n                timer = null\r\n                func.apply(context, args)\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n    const optimizeSearch = useCallback(debounce(handleChange), [])\r\n\r\n    return (\r\n        <>\r\n            <Box>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <span>\r\n                        <TextField\r\n                            sx={{\r\n                                width : \"600px\"\r\n                            }}\r\n                            aria-describedby={id}\r\n                            size=\"small\"\r\n                            placeholder=\"Search Pages\"\r\n                            onFocus={focus}\r\n                            onChange={optimizeSearch}\r\n                            inputProps={{\r\n                                autoComplete: 'off'\r\n                            }}\r\n                            />\r\n                        {selectedData !== \"\" && (\r\n                            <Popper\r\n                                id={id}\r\n                                open={Boolean(anchor)}\r\n                                placement=\"bottom-start\"\r\n                                anchorEl={anchor}\r\n                                disablePortal>\r\n                                <SearchBarFilterMenu data={data} isTyping={isTyping} onMenuClick={onMenuClick} />\r\n                            </Popper>\r\n                        )}\r\n                        \r\n                    </span>\r\n                </ClickAwayListener>\r\n            </Box>\r\n        </>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { CustomDatePicker } from \"../DatePicker/DatePicker\";\r\nimport DomainPicker from \"../DomainPicker/DomainPicker\";\r\nimport { Box, Typography, Paper } from \"@mui/material\";\r\nimport { useGoogle } from \"../../../context/GoogleContext\";\r\nimport { useFetchWrapper } from \"../../../services/useFetchWrapper\";\r\nimport { useAnalyticsApi } from \"../../../services/useAnalyticsApi\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\n\r\nexport default function NavBar({ zuid, token }) {\r\n  const { getGaDomain } = useAnalyticsApi(zuid, token);\r\n  const { googleDetails, setGoogleDetails, setIsAuthenticated } = useGoogle();\r\n  const [domainList, setDomainList] = useState([]);\r\n  const { getGoogleSetting, updateSetting, createGa4Setting } = useFetchWrapper(\r\n    zuid,\r\n    token\r\n  );\r\n  const [googleProfile, setGoogleProfile] = useState(null);\r\n  const [showSelection, setShowSelection] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const domains = await getGaDomain();\r\n      setDomainList(domains.properties);\r\n      setIsAuthenticated(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setIsAuthenticated(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    if (domainList && domainList.length !== 0) {\r\n      let gData = await getGoogleSetting();\r\n      if (!gData) {\r\n        await createGa4Setting();\r\n        gData = await getGoogleSetting();\r\n      }\r\n      const selectedProfile = domainList.find(\r\n        (domain) => domain.name === gData.value\r\n      );\r\n\r\n      if (gData.value === \"\") setShowSelection(true);\r\n      setGoogleProfile(gData);\r\n      setGoogleDetails(selectedProfile);\r\n    }\r\n  }, [domainList]);\r\n\r\n  const onDomainSelect = async (domain) => {\r\n    setGoogleDetails(domain);\r\n\r\n    var property = googleProfile;\r\n    property[\"value\"] = domain.name;\r\n\r\n    await updateSetting(property.ZUID, property);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        square\r\n        sx={{\r\n          display: \"flex\",\r\n          paddingBottom: \"0px\",\r\n          alignItems: \"center\",\r\n          gap: 4,\r\n          position: \"fixed\",\r\n          backgroundColor: \"#fff\",\r\n          left: 0,\r\n          right: 0,\r\n          top: 0,\r\n          paddingBottom: 2,\r\n          paddingTop: 2,\r\n          paddingLeft: 4,\r\n          paddingRight: 4,\r\n          zIndex: 20,\r\n        }}\r\n      >\r\n        <Box>\r\n          {googleDetails && (\r\n            <>\r\n              <Box sx={{ display: \"flex\", minWidth: 250 }}>\r\n                <Typography\r\n                  variant=\"h2\"\r\n                  sx={{\r\n                    fontWeight: \"600\",\r\n                    fontSize: \"16pt\",\r\n                    color: \"#5b667d\",\r\n                  }}\r\n                >\r\n                  {googleDetails\r\n                    ? googleDetails.displayName\r\n                    : \"No Domain Selected\"}\r\n                </Typography>\r\n                <DomainPicker\r\n                  domainList={domainList}\r\n                  onSelect={onDomainSelect}\r\n                  domainSelect={googleDetails}\r\n                  buttonName=\"Change\"\r\n                  variant=\"text\"\r\n                  size=\"small\"\r\n                />\r\n              </Box>\r\n\r\n              <Typography\r\n                variant=\"h2\"\r\n                sx={{\r\n                  fontWeight: \"200\",\r\n                  fontSize: \"12pt\",\r\n                  color: \"#5b667d\",\r\n                }}\r\n              >\r\n                {googleDetails &&\r\n                  googleDetails.dataStreams[0].webStreamData.defaultUri}\r\n              </Typography>\r\n            </>\r\n          )}\r\n          {!googleDetails && (\r\n            <Box sx={{ width: 250 }}>\r\n              <DomainPicker\r\n                domainList={domainList}\r\n                onSelect={onDomainSelect}\r\n                domainSelect={googleDetails}\r\n                show={showSelection}\r\n              />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <SearchBar zuid={zuid} token={token} />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            gap: 2,\r\n          }}\r\n        >\r\n          <CustomDatePicker />\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","\r\nimport Button from \"@mui/material/Button\";\r\nimport KeyIcon from \"@mui/icons-material/Key\";\r\n\r\nconst GaAuthenticates = ({ onClick }) => {\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"success\"\r\n        onClick={onClick}\r\n        startIcon={<KeyIcon />}\r\n        sx={{\r\n          marginTop : '20px'\r\n        }}\r\n      >\r\n        Click here to Authenticate With Google\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GaAuthenticates","import {useState} from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGlobe, faKey, faPlug } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Button from \"@mui/material/Button\";\r\nimport PublicIcon from \"@mui/icons-material/Public\";\r\nimport GaAuthenticate from \"./GaAuthenticate\";\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport const GoogleAuthOverlay = ({ user, instance, isAuthenticated = true }) => {\r\n\r\n  const [state, setState] = useState({\r\n    titles: {\r\n      noDomain: \"Please Setup a Domain before Authenticating\",\r\n      notAuthenticated: \"Please Authenticate Google Analytics\",\r\n      legacyAuthentication: \"Google needs to be Re-authenticated\",\r\n    },\r\n    descriptions: {\r\n      noDomain:\r\n        \"A domain can be set in Zesty.io accounts. Open up your instance settings, and set a domain. Once a domain is set, an authentication button will appear here.\",\r\n      notAuthenticated:\r\n        \"Someone in your organization with Google Analytics access needs to authenticate this Zesty.io instance. Before authenticating, the domain associated with this instance needs to be registed in Google Analytics.\",\r\n      legacyAuthentication:\r\n        \"Traffic is being tracked, but your Google Authentication is from Legacy Zesty.io and needs to be re-authenticated to access new metrics. Someone in your organization with Google Analytics access needs to do this.\",\r\n    },\r\n    generalDescription:\r\n      \"Authenticating Google Analytics will automate GA tags in your Web Engine renders pages. If you use Zesty.io purely headlessly, Google Analytics will on provide value on rendered web views.\",\r\n  })\r\n\r\n\r\n  const createAnalyticsPopup = (evt) => {\r\n    var address = encodeURI(\r\n      process.env.REACT_APP_SERVICE_GOOGLE_ANALYTICS_GA4_AUTH +\r\n        \"?user_id=\" +\r\n        user +\r\n        \"&account_id=\" +\r\n        instance.ID \r\n    );\r\n\r\n    var win = window.open(\r\n      address,\r\n      \"analytics\",\r\n      \"width=700,height=450,left=\" +\r\n        (evt.target.offsetLeft + 400) +\r\n        \",top=\" +\r\n        evt.target.offsetTop\r\n    );\r\n\r\n  };\r\n\r\n    return (\r\n      <>\r\n       <Backdrop\r\n        sx={{\r\n          color: \"#fff\",\r\n          zIndex: 20,\r\n        }}\r\n        open={!isAuthenticated}\r\n        onClick={() => {}}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display : \"flex\",\r\n            flexDirection : \"column\",\r\n            justifyItems : 'center',\r\n            alignItems : 'center',\r\n          }}>\r\n          <Box\r\n            sx={{\r\n              display : 'flex',\r\n              flexDirection : 'column',\r\n              justifyItems : 'center',\r\n              alignItems : 'center',\r\n              padding : '20px',\r\n              backgroundColor : \"rgba(0, 0, 0, 0.5);\",\r\n              borderRadius : '5px',\r\n              marginBottom : '20px'\r\n            }}>\r\n            <img\r\n              alt=\"Google Analytics Logo\"\r\n              style={{ width : '300px' }}\r\n              src=\"https://developers.google.com/analytics/images/terms/logo_lockup_analytics_icon_vertical_white_2x.png\"\r\n            />\r\n            <div style={{ textAlign : 'center', display: \"flex\" }}>\r\n              <FontAwesomeIcon icon={faPlug}/>{\" \"}<Typography sx={{ marginLeft : '10px' }}>Zesty.io WebEngine™ Integration</Typography>\r\n            </div>\r\n          </Box>\r\n            <Box\r\n              sx={{\r\n                width : '700px',\r\n                display : 'flex',\r\n                flexDirection : 'column',\r\n                justifyItems : 'center',\r\n                alignItems : 'center'\r\n              }}>\r\n            \r\n              {/* {gaLegacyAuth ? (\r\n                <>\r\n                  <Typography variant=\"h5\">{state.titles.legacyAuthentication}</Typography>\r\n                  <Typography variant=\"p\" sx={{ fontWeight : '200' }}>{state.descriptions.legacyAuthentication}</Typography>\r\n                </>\r\n              ) : ( */}\r\n                <>\r\n                  <Typography variant=\"h5\">{state.titles.notAuthenticated}</Typography>\r\n                  <Typography variant=\"p\" sx={{ fontWeight : '200' }}>{state.descriptions.notAuthenticated}</Typography>\r\n                </>\r\n              {/* )} */}\r\n\r\n              {/* Exported this button in order to utilize usePermission hook */}\r\n              <GaAuthenticate onClick={createAnalyticsPopup} />\r\n          </Box>\r\n        </Box>\r\n      </Backdrop>\r\n      </>\r\n   \r\n    );\r\n}\r\n","\r\nimport {\r\n    Link,\r\n  } from \"react-router-dom\";import NavBar from \"../NavBar/NavBar\";\r\nimport { GoogleAuthOverlay } from \"../AuthOverlay\";\r\nimport { Box } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport MenuList from \"@mui/material/MenuList\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst Menu = () => (\r\n    <Paper\r\n      sx={{\r\n        width: 250,\r\n        maxWidth: \"100%\",\r\n        position: \"sticky\",\r\n        position: \"-webkit-sticky\",\r\n        top: 0,\r\n      }}\r\n    >\r\n      <MenuList>\r\n        <MenuItem component={Link} to=\"/\">\r\n          <Typography color=\"primary\" sx={{ fontWeight: \"bold\" }}>\r\n            Overview\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem component={Link} to=\"/content\">\r\n          <Typography color=\"primary\" sx={{ fontWeight: \"bold\" }}>\r\n            Pages\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem component={Link} to=\"/journey\">\r\n          <Typography color=\"primary\" sx={{ fontWeight: \"bold\" }}>\r\n            User Journey\r\n          </Typography>\r\n        </MenuItem>\r\n      </MenuList>\r\n    </Paper>\r\n  );\r\n  \r\n\r\nexport default function ContentWrapper({ token, userId, instance, isAuthenticated, children }){\r\n\r\n    return (\r\n        <>\r\n        <NavBar zuid={instance.ZUID} token={token} />\r\n        <Box\r\n          sx={{\r\n            p: 4,\r\n            marginTop: 10,\r\n          }}\r\n        >\r\n          <GoogleAuthOverlay\r\n            user={userId}\r\n            instance={instance}\r\n            isAuthenticated={isAuthenticated}\r\n          />\r\n          <Box sx={{ display: \"flex\", gap: 4 }}>\r\n            <Box>\r\n              <Menu />\r\n            </Box>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                {children}\r\n            </Box>\r\n            </Box>\r\n        </Box>\r\n        </>\r\n    )\r\n\r\n}","import {  Grid, Box, Typography } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nexport default function MetricItem({data, metric = null}){\r\n\r\n    const Item = ({label, value}) => {\r\n        return (<>\r\n        <Grid item sx={{ padding: 3 }}>\r\n        <Typography\r\n          sx={{ fontWeight: \"bold\", fontSize: \"10pt\", color: \"#5b667d\" }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n        <Box sx={{ marginTop: \"5px\" }}>\r\n          <Typography\r\n            color=\"secondary\"\r\n            sx={{ fontSize: \"18pt\", fontWeight: \"bold\", marginBottom: \"5px\" }}\r\n          >\r\n            {value}\r\n          </Typography>\r\n         \r\n          <Typography\r\n            sx={{ fontSize: \"10pt\", color: \"#5b667d\" }}\r\n          >Last 7 Days</Typography>\r\n        </Box>\r\n      </Grid></>)\r\n    }\r\n    const AvgSessionDuration = () => {\r\n        let sessionDur = data.googleData.reports[0].data.rows[0].metrics[0].values[0]\r\n        sessionDur = moment().startOf(\"day\").seconds(Number(sessionDur)).format(\"HH:mm:ss\");\r\n        return (\r\n            <>\r\n                <Item label=\"Average Session Duration\" value={sessionDur} />\r\n            </>\r\n        )\r\n    }\r\n    const BounceRate = () => {\r\n        let bounceRate = data.googleData.reports[0].data.rows[0].metrics[0].values[1]\r\n        bounceRate = Number(bounceRate).toFixed(2)\r\n        return (\r\n            <>\r\n                <Item label=\"Bounce Rate\" value={bounceRate} />\r\n            </>\r\n        )\r\n    }\r\n    \r\n    const PageValue = () => {\r\n        let pageValue = data.googleData.reports[0].data.rows[0].metrics[0].values[2]\r\n        return (\r\n            <>\r\n                <Item label=\"Page Value\" value={pageValue} />\r\n            </>\r\n        )\r\n    }\r\n    const PageViews = () => {\r\n        let pageViews = data.googleData.reports[0].data.rows[0].metrics[0].values[3]\r\n        return (\r\n            <>\r\n                <Item label=\"Page Views\" value={pageViews} />\r\n            </>\r\n        )\r\n    }\r\n    const EventPerSession = () => {\r\n        let eventPerSession = data.googleData.reports[0].data.rows[0].metrics[0].values[4]\r\n        eventPerSession = Number(eventPerSession).toFixed(2)\r\n        return (\r\n            <>\r\n                <Item label=\"Event Per Session\" value={eventPerSession} />\r\n            </>\r\n        )\r\n    }\r\n    const Conversions = () => {\r\n        let conversion = data.googleData.reports[0].data.rows[0].metrics[0].values[5]\r\n        return (\r\n            <>\r\n                <Item label=\"Conversions\" value={conversion} />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {metric === \"bounce-rate\" && <BounceRate />}\r\n            {metric === \"avg-session-duration\" && <AvgSessionDuration />}\r\n            {metric === \"page-value\" && <PageValue />}\r\n            {metric === \"page-views\" && <PageViews />}\r\n            {metric === \"event-per-session\" && <EventPerSession />}\r\n            {metric === \"conversions\" && <Conversions />}\r\n            {metric === null && (\r\n                <>\r\n                    <BounceRate />\r\n                    <AvgSessionDuration />\r\n                    <PageValue />\r\n                    <PageViews />\r\n                    <EventPerSession />\r\n                    <Conversions />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}","\r\nimport { useAnalyticsApi } from \"../../../services/useAnalyticsApi\"\r\nimport { Card, Grid} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDateRange } from \"../../../context/DateRangeContext\";\r\nimport { useFetchWrapper } from \"../../../services/useFetchWrapper\";\r\nimport MetricItem from \"./MetricItem\";\r\nimport {\r\n    useParams,\r\n  } from \"react-router-dom\";\r\n\r\nexport default function MetricCard({ instance, token, path = []}){\r\n    const { metric } = useParams();\r\n    const [metricData, setMetricData] = useState(null)\r\n    const dateRange = useDateRange();\r\n    const { getContentSinglePage } = useAnalyticsApi(\r\n        instance.ZUID,\r\n        token\r\n    );\r\n\r\n    const { getGoogleSetting } = useFetchWrapper(\r\n        instance.ZUID,\r\n        token\r\n      );\r\n\r\n    const getData = async () =>{\r\n        const googleData = await getGoogleSetting()\r\n        const contentData = await getContentSinglePage(\r\n            googleData.value,\r\n            dateRange,\r\n            \"bar\",\r\n            path,\r\n            10\r\n          );\r\n        setMetricData(contentData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n        <Card>\r\n            <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"flex-start\"\r\n            >\r\n                {metricData !== null && <MetricItem data={metricData} metric={metric} />}\r\n            </Grid> \r\n        </Card>\r\n        </>\r\n    )\r\n    \r\n}","import GraphContainer from \"../../ui/GraphContainer\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useEffect, useState } from \"react\";\r\nimport MetricSelection from \"../MetricSelection\";\r\nimport { Typography, Box } from \"@mui/material\";\r\nimport { useDateRange } from \"../../../context/DateRangeContext\";\r\nimport moment from \"moment\";\r\n\r\nexport default function MetricGraph({ selectedPath, data, isLoading = true }) {\r\n  const dateRange = useDateRange();\r\n  const [selectedMetricsY1, setSelectedMetricsY1] = useState(null);\r\n  const [selectedMetricsY2, setSelectedMetricsY2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      data &&\r\n      data.datasets[0].label !== \"Loading\" &&\r\n      selectedMetricsY1 === null &&\r\n      selectedMetricsY2 === null\r\n    )\r\n      setSelectedMetricsY1(\"ScreenPageViews\");\r\n  }, [data]);\r\n\r\n  const onSelectY1 = (event, metric) => {\r\n    if (event.target.checked) return setSelectedMetricsY1(metric);\r\n    setSelectedMetricsY1(null);\r\n  };\r\n\r\n  const onSelectY2 = (event, metric) => {\r\n    if (event.target.checked) return setSelectedMetricsY2(metric);\r\n    setSelectedMetricsY2(null);\r\n  };\r\n\r\n  const getY1 = () => {\r\n    if (selectedMetricsY1) {\r\n      return data.datasets\r\n        .filter((data) => data.label === selectedMetricsY1)\r\n        .map((data) => {\r\n          return { ...data, yAxisID: \"y1\" };\r\n        })\r\n        .shift();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getY2 = () => {\r\n    if (selectedMetricsY2) {\r\n      return data.datasets\r\n        .filter((data) => data.label === selectedMetricsY2)\r\n        .map((data) => {\r\n          return { ...data, yAxisID: \"y2\" };\r\n        })\r\n        .shift();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const MetricSelectionComponent = () => {\r\n    return (\r\n      <>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            gap: 2,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <MetricSelection\r\n            metrics={data.datasets}\r\n            selectedMetrics={selectedMetricsY1}\r\n            onSelect={onSelectY1}\r\n          />\r\n          <Typography>vs</Typography>\r\n          <MetricSelection\r\n            metrics={data.datasets}\r\n            selectedMetrics={selectedMetricsY2}\r\n            onSelect={onSelectY2}\r\n          />\r\n        </Box>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const formatTicksY2 = (value, index, ticks) => {\r\n    if (!selectedMetricsY2) return;\r\n    if (selectedMetricsY2.includes(\"Duration\"))\r\n      return moment().startOf(\"day\").seconds(Number(value)).format(\"HH:mm:ss\");\r\n    if (selectedMetricsY2.includes(\"Rate\")) return Math.round(value) + \"%\";\r\n    if (selectedMetricsY2.includes(\"Value\")) return value + \"$\";\r\n\r\n    return value;\r\n  };\r\n\r\n  const formatTicksY1 = (value, index, ticks) => {\r\n    if (!selectedMetricsY1) return;\r\n    if (selectedMetricsY1.includes(\"Duration\"))\r\n      return moment().startOf(\"day\").seconds(Number(value)).format(\"HH:mm:ss\");\r\n    if (selectedMetricsY1.includes(\"Rate\")) return Math.round(value) + \"%\";\r\n    if (selectedMetricsY1.includes(\"Value\")) return value + \"$\";\r\n\r\n    return value;\r\n  };\r\n\r\n  const datasetTicksFormat = (dataSetIndex, value) => {\r\n    if (dataSetIndex === 0) return formatTicksY1(value);\r\n\r\n    return formatTicksY2(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GraphContainer\r\n        title=\"Metric\"\r\n        loading={isLoading}\r\n        subTitle={dateRange.selectedItem}\r\n        rightMenu={<MetricSelectionComponent />}\r\n      >\r\n        <Line\r\n          data={{\r\n            labels: data.labels,\r\n            datasets: [getY1(), getY2()].filter((dataset) => dataset !== null),\r\n          }}\r\n          // width={500}\r\n          height={400}\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            bezierCurve: false,\r\n            tooltips: {\r\n              callbacks: {\r\n                label: function (ticks) {\r\n                  return datasetTicksFormat(ticks.datasetIndex, ticks.value);\r\n                },\r\n                title: function (values) {\r\n                  var { label } = values[0];\r\n                  return moment(label).format(\"YYYY-MM-DD\");\r\n                },\r\n              },\r\n            },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  id: \"y1\",\r\n                  type: \"linear\",\r\n                  position: \"left\",\r\n                  ticks: {\r\n                    callback: formatTicksY1,\r\n                  },\r\n                },\r\n                {\r\n                  id: \"y2\",\r\n                  type: \"linear\",\r\n                  position: \"right\",\r\n                  ticks: {\r\n                    callback: formatTicksY2,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  ticks: {\r\n                    callback: function (value, index, ticks) {\r\n                      return moment(value).format(\"YYYY-MM-DD\");\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n        />\r\n      </GraphContainer>\r\n    </>\r\n  );\r\n}\r\n","import { useAnalyticsApi } from \"../../../services/useAnalyticsApi\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDateRange } from \"../../../context/DateRangeContext\";\r\nimport { useFetchWrapper } from \"../../../services/useFetchWrapper\";\r\nimport MetricGraph from \"./MetricGraph\";\r\nexport default function Graph({ instance, token, path = []}){\r\n    const [metricData, setMetricData] = useState(null)\r\n    const [loading, setLoading] = useState(false);\r\n    const dateRange = useDateRange();\r\n    const { getChartData } = useAnalyticsApi(\r\n        instance.ZUID,\r\n        token\r\n    );\r\n\r\n    const { getGoogleSetting } = useFetchWrapper(\r\n        instance.ZUID,\r\n        token\r\n      );\r\n\r\n    const getData = async () =>{\r\n        const googleData = await getGoogleSetting()\r\n        const contentData = await getChartData(\r\n            googleData.value,\r\n            dateRange,\r\n            \"bar\",\r\n            path\r\n          );\r\n        setMetricData(contentData.chartJSData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {metricData !== null && <MetricGraph data={metricData} isLoading={loading} selectedPath={path} />}\r\n        </>\r\n    )\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useNotify } from \"../../../context/SnackBarContext\";\r\n\r\nexport function MetricTable({\r\n  selectedPagePath,\r\n  tableData\r\n}) {\r\n  const notify = useNotify();\r\n  const [headers, setHeaders] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  const convertData = async () => {\r\n    if (tableData.length !== 0) {\r\n        try {\r\n          const truncatedData = tableData.tableData.data.map((row) => {\r\n            return row.map((col) => {\r\n              // will not attempt conversion on a path\r\n              if (Number(col)) {\r\n                return Number(Math.round(col + \"e\" + 2) + \"e-\" + 2);\r\n              } else {\r\n                return col;\r\n              }\r\n            });\r\n          });\r\n  \r\n          setHeaders(tableData.tableData.headers);\r\n          setData(truncatedData);\r\n        } catch (error) {\r\n          notify.current.error(error.message);\r\n        }\r\n      }\r\n  }\r\n\r\n  useEffect( () => {\r\n    convertData()\r\n  }, [tableData, selectedPagePath]);\r\n\r\n  return (\r\n    <>\r\n        {headers.length && data.length ? (\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {headers.map((item) => (\r\n                  <TableCell>\r\n                    {item.replace(/([A-Z])/g, \" $1\").trim()}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((data, i) => {\r\n                return (\r\n                  <TableRow\r\n                    sx={{\r\n                      backgroundColor:\r\n                        selectedPagePath.length !== 0\r\n                          ? selectedPagePath.includes(data[0])\r\n                            ? \"#ffffff\"\r\n                            : \"#f2f4fb\"\r\n                          : \"#ffffff\",\r\n                    }}\r\n                  >\r\n                    {data.map((field) => (\r\n                      <TableCell>{field}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        ) : (\r\n          \"No content performance data to display\"\r\n        )}\r\n    </>\r\n  );\r\n}\r\n","\r\nimport { MetricTable } from \"./MetricTable\";\r\nimport { useAnalyticsApi } from \"../../../services/useAnalyticsApi\";\r\nimport { useDateRange } from \"../../../context/DateRangeContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useFetchWrapper } from \"../../../services/useFetchWrapper\";\r\nexport default function Table({ instance, token, path = []}){\r\n\r\n    const { getContentPages } = useAnalyticsApi(\r\n        instance.ZUID,\r\n        token\r\n    );\r\n    const { getGoogleSetting } = useFetchWrapper(\r\n        instance.ZUID,\r\n        token\r\n      );\r\n    const [tableData, setTableData] = useState([])\r\n    const dateRange = useDateRange();\r\n\r\n    const getData = async () =>{\r\n        const googleDetails = await getGoogleSetting()\r\n        const data = await getContentPages(\r\n            googleDetails.value,\r\n            dateRange,\r\n            \"bar\",\r\n            path,\r\n            10\r\n          );\r\n        \r\n        setTableData(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {tableData !== null && <MetricTable\r\n            selectedPagePath={path}\r\n            tableData={tableData}\r\n          />}\r\n        </>\r\n    )\r\n\r\n}","import { InboundTraffic } from \"./InboundTraffic\";\r\nimport { PageviewTraffic } from \"./PageviewTraffic\";\r\nimport { TopPerforming } from \"./TopPerforming\";\r\nimport { SocialTraffic } from \"./SocialTraffic\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDateRange } from \"../../../context/DateRangeContext\";\r\nimport { useFetchWrapper } from \"../../../services/useFetchWrapper\";\r\nimport { useEffect, useState } from \"react\";\r\nimport shelldata from \"../../ui/ShellData/shelldata\";\r\nexport default function OverviewGraph({instance, token}){\r\n\r\n    const { type } = useParams();\r\n\r\n    const { getGoogleSetting } = useFetchWrapper(\r\n        instance.ZUID,\r\n        token\r\n      );\r\n    const dateRange = useDateRange();\r\n    const [ googleDetails, setGoogleDetails ] = useState(null)\r\n\r\n    const getProperty = async () => {\r\n        const googleSetting = await getGoogleSetting()\r\n        if(googleSetting){\r\n            setGoogleDetails({ name : googleSetting.value })\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProperty()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n           {googleDetails !== null && type === \"pageview-traffic\" &&  \r\n                <PageviewTraffic\r\n                        instanceZUID={instance.ZUID}\r\n                        googleDetails={googleDetails}\r\n                        data={shelldata.shellBarData}\r\n                        dateRange={dateRange}\r\n                        token={token}\r\n                    />\r\n            }\r\n            {googleDetails !== null && type === \"inbound-traffic\" &&  \r\n                <InboundTraffic\r\n                    instanceZUID={instance.ZUID}\r\n                    googleDetails={googleDetails}\r\n                    data={shelldata.shellDoughnutData}\r\n                    dateRange={dateRange}\r\n                    token={token}\r\n                    />\r\n            }\r\n            {googleDetails !== null && type === \"social-traffic\" &&  \r\n                <SocialTraffic\r\n                    instanceZUID={instance.ZUID}\r\n                    googleDetails={googleDetails}\r\n                    dateRange={dateRange}\r\n                    data={shelldata.shellDoughnutData}\r\n                    token={token}\r\n                    />\r\n            }\r\n            {googleDetails !== null && type === \"top-performing\" &&  \r\n                <TopPerforming\r\n                    instanceZUID={instance.ZUID}\r\n                    googleDetails={googleDetails}\r\n                    dateRange={dateRange}\r\n                    token={token}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n\r\n}","import {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport Overview from \"../../Overview\";\r\nimport PageContent from \"../../PageContent\";\r\nimport Journey from \"../../Journey\";\r\nimport { useGoogle } from \"../../../context/GoogleContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useFetchWrapper } from \"../../../services/useFetchWrapper\";\r\nimport ContentWrapper from \"./ContentWrapper\";\r\nimport MetricCard from \"../../PageContent/card\";\r\nimport Graph from \"../../PageContent/graph\";\r\nimport Table from \"../../PageContent/table\";\r\nimport OverviewGraph from \"../../Overview/graph\";\r\n\r\nexport default function AppWrapper(props) {\r\n  const { isAuthenticated, setIsAuthenticated } = useGoogle();\r\n  const { getUserData } = useFetchWrapper(props.instance.zuid, props.token);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    const user = await getUserData();\r\n    if (user.data === null) return setIsAuthenticated(false);\r\n    setUserId(user.data);\r\n  }, []);\r\n\r\n  const PageNotFound = () => (\r\n    <>\r\n      <p>\r\n        Page not found.\r\n      </p>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter basename=\"/google-analytics-4\">\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<ContentWrapper {...props} isAuthenticated={isAuthenticated} userId={userId} ><Overview {...props} /></ContentWrapper>} />\r\n          <Route exact path=\"/content\" element={<ContentWrapper {...props} isAuthenticated={isAuthenticated} userId={userId} ><PageContent {...props} /></ContentWrapper>} />     \r\n          <Route exact path=\"/journey\" element={<ContentWrapper {...props} isAuthenticated={isAuthenticated} userId={userId} ><Journey {...props} /></ContentWrapper>} />\r\n          <Route exact path=\"/content/card\" element={<MetricCard {...props} isAuthenticated={isAuthenticated} /> } />\r\n          <Route exact path=\"/content/card/:metric\" element={<MetricCard {...props} isAuthenticated={isAuthenticated} /> } />\r\n          <Route exact path=\"/content/graph\" element={<Graph {...props} isAuthenticated={isAuthenticated} /> } />\r\n          <Route exact path=\"/content/table\" element={<Table {...props} isAuthenticated={isAuthenticated} /> } />\r\n          <Route exact path=\"/journey/graph\" element={<Journey {...props} />} />\r\n          <Route exact path=\"/overview/graph/:type\" element={<OverviewGraph {...props} />} />\r\n          <Route path=\"*\" element={<PageNotFound />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n","import { AppLoader } from \"@zesty-io/react-app-loader\";\r\nimport AppWrapper from \"./components/ui/AppWrapper/AppWrapper\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppLoader>\r\n      <AppWrapper />\r\n    </AppLoader>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { theme } from '@zesty-io/material'\r\n\r\nexport default theme","import { DateRangeProvider } from \"./DateRangeContext\";\r\nimport { SnackBarProvider } from \"./SnackBarContext\";\r\nimport { GoogleProvider } from \"./GoogleContext\";\r\n\r\nexport default function ContextWrapper({ children }){\r\n\r\n    return (\r\n        <DateRangeProvider>\r\n            <SnackBarProvider>\r\n                <GoogleProvider>\r\n                    {children}\r\n                </GoogleProvider>\r\n            </SnackBarProvider>\r\n        </DateRangeProvider>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport theme from './theme'\r\nimport { ThemeProvider } from '@mui/material/styles'\r\nimport {CssBaseline} from '@mui/material'\r\nimport ContextWrapper from \"./context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <ContextWrapper>\r\n        <App />\r\n      </ContextWrapper>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}